F00:0001       .set __LIB__, 1
F00:0002       .set __ORG__, 0x2500
F00:0003       
F00:0004       .include "Routines.inc"
F01:0001       
F01:0002       # address where user programs load
F01:0003       .include "SERIAL.inc"
F02:0001       .equ SERIALPORT , 0x01
F02:0002       .equ SERIALPORT2, 0x02
F02:0003       
F01:0004       .include "SDCARD.inc"
F03:0001       .equ SDCARD,0x05
F03:0002       ; ******* SDCARD *********
F03:0003       ; z80 out -filenameclear: no return value, will close the previous open file is one already open
F03:0004       .equ FILENAMECLEAR ,1
F03:0005       
F03:0006       ; z80 out + in -open: will return a status 1 if file open successfull, 0 if open failed
F03:0007       .equ OPEN ,2
F03:0008       
F03:0009       ; z80 out - close: no return value
F03:0010       .equ CLOSE ,3
F03:0011       
F03:0012       ; z80 out + out - filenameappend: no return value
F03:0013       .equ FILENAMEAPPEND ,4
F03:0014       
F03:0015       ; z80 out + in - readnextbyte: will return 0xFF is nothing to read, which might be a problem if you don't check the avai
F03:0016       .equ READNEXTBYTE ,5
F03:0017       
F03:0018       ; z80 out + in - available: return 1 is data is available, 0 if no data available
F03:0019       .equ AVAILABLE ,6
F03:0020       
F03:0021       ; z80 out + in - openwrite: open file for write ,will return a status 1 if file open successfull, 0 if open failed
F03:0022       .equ OPENWRITE,7
F03:0023       
F03:0024       ; z80 - out + out -writebyte: will write data to an open file,is no file is open or the file is not writable nothing wil
F03:0025       .equ WRITEBYTE,8
F03:0026       
F03:0027       ;#===============================
F03:0028       ; z80 - out -getname: prepares to get the openfilename, use NAMEAVAILABLE to read the bytes, no return value
F03:0029       .equ GETNAME,0x20
F03:0030       ; z80 out + in - nameavailable: return next character of the filename, or 0 it no more characters
F03:0031       .equ NAMEAVAILABLE,0x21
F03:0032       ;z80 - out - opendirectory : will open the root directory for directory listing, no return value
F03:0033       .equ OPENDIRECTORY,0x31
F03:0034       ;z80 -out - nextfile: move to the next directory entry, no return value
F03:0035       .equ NEXTFILE,0x32
F01:0005       .equ commandMemory, 0x1000
F01:0006       .equ userMemory,0x2000
F01:0007       .equ libMemory,0xF000
F01:0008       
F01:0009       .equ TRUE, 1
F01:0010       .equ FALSE, 0
F01:0011       
F01:0012       # the only fixed address (i hope), use it to get the address of utilities methods
F01:0013       # ld a, PRINT
F01:0014       # call GetAddress
F01:0015       # address for print loaded into hl
F01:0016       # the value in hl can change between os versions so do not hard code the values
F01:0017       
F01:0018       .equ GetAddress, 0x0804
F01:0019       .equ PRINT,		1
F01:0020       .equ PRINTLN,	9
F01:0021       .equ PRINTHEX,	2
F01:0022       .equ LOADFILE,	3
F01:0023       .equ MEMSET,	4
F01:0024       .equ STRLEN,	5
F01:0025       .equ PUTC,		6
F01:0026       .equ TOUPPERCASE,7
F01:0027       .equ HEXTOBYTE,	8
F01:0028       .equ STRNCPY,10
F01:0029       .equ CREATEPROCESS,16
F01:0030       .equ GETCOMMANDPARAMS,17
F01:0031       # filesystem - primitive functions, probably going to change 
F01:0032       .equ DIRECTORYOPEN,13
F01:0033       .equ DIRECTORYNEXTFILE,14
F01:0034       .equ GETFILENAME,15
F01:0035       
F01:0036       
F01:0037       
F01:0038       .equ NEXTNUMBER,18
F01:0039       
F01:0040       
F00:0005       .include "libs.inc"
F04:0001       
F04:0002       .ifndef __CMD__
F04:0003       	.ifdef __LIB__
F04:0004       		.ifdef __ORG__
F04:0005       			.org __ORG__
F04:0006       		.else 
F04:0007       		.org dllMemory
F04:0008       		.endif
F04:0009       		.2byte $
               S01:00002500:  00 25
F04:0010       		jp libaddress
               S01:00002502:  C3 A2 25
F04:0011       initialize:
F04:0012       	.else
F04:0013       		.org userMemory
F04:0014       	.endif
F04:0015       .endif
F04:0016       	ld a,PRINT
               S01:00002505:  3E 01
F04:0017       	call GetAddress
               S01:00002507:  CD 04 08
F04:0018       	ld (printadr),hl
               S01:0000250A:  22 79 25
F04:0019       	ld a,PRINTHEX
               S01:0000250D:  3E 02
F04:0020       	call GetAddress
               S01:0000250F:  CD 04 08
F04:0021       	ld (printhexadr),hl
               S01:00002512:  22 7F 25
F04:0022       	ld a,LOADFILE
               S01:00002515:  3E 03
F04:0023       	call GetAddress
               S01:00002517:  CD 04 08
F04:0024       	ld (loadfileadr),hl
               S01:0000251A:  22 82 25
F04:0025       	ld a,MEMSET
               S01:0000251D:  3E 04
F04:0026       	call GetAddress
               S01:0000251F:  CD 04 08
F04:0027       	ld (memsetadr),hl
               S01:00002522:  22 85 25
F04:0028       	ld a,STRLEN
               S01:00002525:  3E 05
F04:0029       	call GetAddress
               S01:00002527:  CD 04 08
F04:0030       	ld (strlenadr),hl
               S01:0000252A:  22 88 25
F04:0031       	ld a,PUTC
               S01:0000252D:  3E 06
F04:0032       	call GetAddress
               S01:0000252F:  CD 04 08
F04:0033       	ld (putcadr),hl
               S01:00002532:  22 8B 25
F04:0034       	ld a,TOUPPERCASE
               S01:00002535:  3E 07
F04:0035       	call GetAddress
               S01:00002537:  CD 04 08
F04:0036       	ld (touppercaseadr),hl
               S01:0000253A:  22 8E 25
F04:0037       	ld a,HEXTOBYTE
               S01:0000253D:  3E 08
F04:0038       	call GetAddress
               S01:0000253F:  CD 04 08
F04:0039       	ld (hextobyteadr),hl
               S01:00002542:  22 91 25
F04:0040       	ld a,PRINTLN
               S01:00002545:  3E 09
F04:0041       	call GetAddress
               S01:00002547:  CD 04 08
F04:0042       	ld (printlnadr),hl
               S01:0000254A:  22 7C 25
F04:0043       	ld a,DIRECTORYOPEN
               S01:0000254D:  3E 0D
F04:0044       	call GetAddress
               S01:0000254F:  CD 04 08
F04:0045       	ld (directoryopenadr),hl
               S01:00002552:  22 94 25
F04:0046       	ld a,NEXTFILE
               S01:00002555:  3E 32
F04:0047       	call GetAddress
               S01:00002557:  CD 04 08
F04:0048       	ld (directorynextfileadr),hl
               S01:0000255A:  22 97 25
F04:0049       	ld a,GETFILENAME
               S01:0000255D:  3E 0F
F04:0050       	call GetAddress
               S01:0000255F:  CD 04 08
F04:0051       	ld (getfilenameadr),hl
               S01:00002562:  22 9A 25
F04:0052       	ld a,CREATEPROCESS
               S01:00002565:  3E 10
F04:0053       	call GetAddress
               S01:00002567:  CD 04 08
F04:0054       	ld (createProcessadr),hl
               S01:0000256A:  22 9D 25
F04:0055       	ld a,GETCOMMANDPARAMS
               S01:0000256D:  3E 11
F04:0056       	call GetAddress
               S01:0000256F:  CD 04 08
F04:0057       	ld (getcommandparamsadr),hl
               S01:00002572:  22 A0 25
F04:0058       
F04:0059       
F04:0060       	jp _main
               S01:00002575:  C3 A2 25
F04:0061       
F04:0062       	functionlookups:
F04:0063       	.align 2
F04:0064       	print: .byte 0xc3
               S01:00002578:  C3
F04:0065       	printadr: .2byte 0
               S01:00002579:  00 00
F04:0066       	println: .byte 0xc3
               S01:0000257B:  C3
F04:0067       	printlnadr: .2byte 0
               S01:0000257C:  00 00
F04:0068       	printhex: .byte 0xc3
               S01:0000257E:  C3
F04:0069       	printhexadr: .2byte 0
               S01:0000257F:  00 00
F04:0070       	loadfile: .byte 0xc3
               S01:00002581:  C3
F04:0071       	loadfileadr: .2byte 0
               S01:00002582:  00 00
F04:0072       	memset: .byte 0xc3
               S01:00002584:  C3
F04:0073       	memsetadr: .2byte 0
               S01:00002585:  00 00
F04:0074       	strlen: .byte 0xc3
               S01:00002587:  C3
F04:0075       	strlenadr: .2byte 0
               S01:00002588:  00 00
F04:0076       	putc: .byte 0xc3
               S01:0000258A:  C3
F04:0077       	putcadr: .2byte 0
               S01:0000258B:  00 00
F04:0078       	touppercase: .byte 0xc3
               S01:0000258D:  C3
F04:0079       	touppercaseadr: .2byte 0
               S01:0000258E:  00 00
F04:0080       	hextobyte: .byte 0xc3
               S01:00002590:  C3
F04:0081       	hextobyteadr: .2byte 0
               S01:00002591:  00 00
F04:0082       	directoryopen: .byte 0xc3
               S01:00002593:  C3
F04:0083       	directoryopenadr: .2byte 0
               S01:00002594:  00 00
F04:0084       	directorynextfile: .byte 0xc3
               S01:00002596:  C3
F04:0085       	directorynextfileadr: .2byte 0
               S01:00002597:  00 00
F04:0086       	getfilename: .byte 0xc3
               S01:00002599:  C3
F04:0087       	getfilenameadr: .2byte 0
               S01:0000259A:  00 00
F04:0088       	createProcess: .byte 0xc3
               S01:0000259C:  C3
F04:0089       	createProcessadr: .2byte 0
               S01:0000259D:  00 00
F04:0090       	getcommandparams: .byte 0xc3
               S01:0000259F:  C3
F04:0091       	getcommandparamsadr: .2byte 0
               S01:000025A0:  00 00
F04:0092       
F04:0093       _main:
F04:0094       .ifdef __DLL__
F04:0095       	ret
F04:0096       .endif
F00:0006       
F00:0007       
F00:0008       
F00:0009       
F00:0010       libaddress:
F00:0011           cp 0
               S01:000025A2:  FE 00
F00:0012           jp nz,_end$:
               S01:000025A4:  C2 AA 25
F00:0013           jp initialize
               S01:000025A7:  C3 05 25
F00:0014       #_2$:
F00:0015       #    cp TEST
F00:0016       #    jp nz, _end$
F00:0017       #    ld hl,test
F00:0018       #    ret
F00:0019       _end$:
F00:0020       #----- not defined ---
F00:0021           ld hl,0
               S01:000025AA:  21 00 00
F00:0022           ret
               S01:000025AD:  C9


Sections:
S01  seg2500


Sources:
F00  keyboard.s
F01  Routines.inc
F02  SERIAL.inc
F03  SDCARD.inc
F04  libs.inc


Symbols:
_end$ EXPR(9642=0x25aa) ABS 
getcommandparams EXPR(9631=0x259f) UNUSED ABS 
createProcess EXPR(9628=0x259c) UNUSED ABS 
getfilename EXPR(9625=0x2599) UNUSED ABS 
directorynextfile EXPR(9622=0x2596) UNUSED ABS 
directoryopen EXPR(9619=0x2593) UNUSED ABS 
hextobyte EXPR(9616=0x2590) UNUSED ABS 
touppercase EXPR(9613=0x258d) UNUSED ABS 
putc EXPR(9610=0x258a) UNUSED ABS 
strlen EXPR(9607=0x2587) UNUSED ABS 
memset EXPR(9604=0x2584) UNUSED ABS 
loadfile EXPR(9601=0x2581) UNUSED ABS 
printhex EXPR(9598=0x257e) UNUSED ABS 
println EXPR(9595=0x257b) UNUSED ABS 
print EXPR(9592=0x2578) UNUSED ABS 
functionlookups EXPR(9592=0x2578) UNUSED ABS 
_main EXPR(9634=0x25a2) ABS 
getcommandparamsadr EXPR(9632=0x25a0) ABS 
createProcessadr EXPR(9629=0x259d) ABS 
getfilenameadr EXPR(9626=0x259a) ABS 
directorynextfileadr EXPR(9623=0x2597) ABS 
directoryopenadr EXPR(9620=0x2594) ABS 
printlnadr EXPR(9596=0x257c) ABS 
hextobyteadr EXPR(9617=0x2591) ABS 
touppercaseadr EXPR(9614=0x258e) ABS 
putcadr EXPR(9611=0x258b) ABS 
strlenadr EXPR(9608=0x2588) ABS 
memsetadr EXPR(9605=0x2585) ABS 
loadfileadr EXPR(9602=0x2582) ABS 
printhexadr EXPR(9599=0x257f) ABS 
printadr EXPR(9593=0x2579) ABS 
initialize EXPR(9477=0x2505) ABS 
libaddress EXPR(9634=0x25a2) ABS 
 *current pc dummy* EXPR(9472=0x2500) INTERNAL PROT ABS 
NEXTNUMBER EXPR(18=0x12) UNUSED 
GETFILENAME EXPR(15=0xf) 
DIRECTORYNEXTFILE EXPR(14=0xe) UNUSED 
DIRECTORYOPEN EXPR(13=0xd) 
GETCOMMANDPARAMS EXPR(17=0x11) 
CREATEPROCESS EXPR(16=0x10) 
STRNCPY EXPR(10=0xa) UNUSED 
HEXTOBYTE EXPR(8=0x8) 
TOUPPERCASE EXPR(7=0x7) 
PUTC EXPR(6=0x6) 
STRLEN EXPR(5=0x5) 
MEMSET EXPR(4=0x4) 
LOADFILE EXPR(3=0x3) 
PRINTHEX EXPR(2=0x2) 
PRINTLN EXPR(9=0x9) 
PRINT EXPR(1=0x1) 
GetAddress EXPR(2052=0x804) 
FALSE EXPR(0=0x0) UNUSED 
TRUE EXPR(1=0x1) UNUSED 
libMemory EXPR(61440=0xf000) UNUSED 
userMemory EXPR(8192=0x2000) UNUSED 
commandMemory EXPR(4096=0x1000) UNUSED 
NEXTFILE EXPR(50=0x32) 
OPENDIRECTORY EXPR(49=0x31) UNUSED 
NAMEAVAILABLE EXPR(33=0x21) UNUSED 
GETNAME EXPR(32=0x20) UNUSED 
WRITEBYTE EXPR(8=0x8) UNUSED 
OPENWRITE EXPR(7=0x7) UNUSED 
AVAILABLE EXPR(6=0x6) UNUSED 
READNEXTBYTE EXPR(5=0x5) UNUSED 
FILENAMEAPPEND EXPR(4=0x4) UNUSED 
CLOSE EXPR(3=0x3) UNUSED 
OPEN EXPR(2=0x2) UNUSED 
FILENAMECLEAR EXPR(1=0x1) UNUSED 
SDCARD EXPR(5=0x5) UNUSED 
SERIALPORT2 EXPR(2=0x2) UNUSED 
SERIALPORT EXPR(1=0x1) UNUSED 
__ORG__ EXPR(9472=0x2500) 
__LIB__ EXPR(1=0x1) UNUSED 
__VASM EXPR(0=0x0) INTERNAL 
__MSDOSFS EXPR(0=0x0) INTERNAL 

There have been no errors.

F00:0001       .set __LIB__, 1
F00:0002       .set __ORG__, 0x5500
F00:0003       
F00:0004       .include "Routines.inc"
F01:0001       
F01:0002       .macro DEBUG CHARACTER='!'
F01:0009       
F01:0010       
F01:0011       .macro DEBUGHEX CHARACTER='!'
F01:0018       
F01:0019       
F01:0020       .macro PRINTLN
F01:0025       
F01:0026       
F01:0027       
F01:0028       # address where user programs load
F01:0029       .include "SERIAL.inc"
F02:0001       .equ SERIALPORT , 0x01
F02:0002       .equ SERIALPORT2, 0x02
F02:0003       
F01:0030       .include "SDCARD.inc"
F03:0001       .equ SDCARD,0x05
F03:0002       ; ******* SDCARD *********
F03:0003       ; z80 out -filenameclear: no return value, will close the previous open file is one already open
F03:0004       .equ FILENAMECLEAR ,1
F03:0005       
F03:0006       ; z80 out + in -open: will return a status 1 if file open successfull, 0 if open failed
F03:0007       .equ OPEN ,2
F03:0008       
F03:0009       ; z80 out - close: no return value
F03:0010       .equ CLOSE ,3
F03:0011       
F03:0012       ; z80 out + out - filenameappend: no return value
F03:0013       .equ FILENAMEAPPEND ,4
F03:0014       
F03:0015       ; z80 out + in - readnextbyte: will return 0xFF is nothing to read, which might be a problem if you don't check the avai
F03:0016       .equ READNEXTBYTE ,5
F03:0017       
F03:0018       ; z80 out + in - available: return 1 is data is available, 0 if no data available
F03:0019       .equ AVAILABLE ,6
F03:0020       
F03:0021       ; z80 out + in - openwrite: open file for write ,will return a status 1 if file open successfull, 0 if open failed
F03:0022       .equ OPENWRITE,7
F03:0023       
F03:0024       ; z80 - out + out -writebyte: will write data to an open file,is no file is open or the file is not writable nothing wil
F03:0025       .equ WRITEBYTE,8
F03:0026       
F03:0027       ;#===============================
F03:0028       ; z80 - out -getname: prepares to get the openfilename, use NAMEAVAILABLE to read the bytes, no return value
F03:0029       .equ GETNAME,0x20
F03:0030       ; z80 out + in - nameavailable: return next character of the filename, or 0 it no more characters
F03:0031       .equ NAMEAVAILABLE,0x21
F03:0032       ;z80 - out - opendirectory : will open the root directory for directory listing, no return value
F03:0033       .equ OPENDIRECTORY,0x31
F03:0034       ;z80 -out - nextfile: move to the next directory entry, no return value
F03:0035       .equ NEXTFILE,0x32
F01:0031       .equ commandMemory, 0x2000
F01:0032       .equ userMemory,0x3000
F01:0033       .equ libMemory,0xF000
F01:0034       
F01:0035       .equ TRUE, 1
F01:0036       .equ FALSE, 0
F01:0037       
F01:0038       # the only fixed address (i hope), use it to get the address of utilities methods
F01:0039       # ld a, PRINT
F01:0040       # call GetAddress
F01:0041       # address for print loaded into hl
F01:0042       # the value in hl can change between os versions so do not hard code the values
F01:0043       
F01:0044       .equ GetAddress, 0x0804
F01:0045       .equ PRINT,		1
F01:0046       .equ PRINTLN,	9
F01:0047       .equ PRINTHEX,	2
F01:0048       .equ PRINTHEXL,21
F01:0049       .equ LOADFILE,	3
F01:0050       .equ MEMSET,	4
F01:0051       .equ STRLEN,	5
F01:0052       .equ STRCPY,24
F01:0053       .equ STRNCPY,10
F01:0054       .equ PUTC,		6
F01:0055       .equ TOUPPERCASE,7
F01:0056       .equ HEXTOBYTE,	8
F01:0057       .equ CREATEPROCESS,16
F01:0058       .equ GETCOMMANDPARAMS,17
F01:0059       # filesystem - primitive functions, probably going to change 
F01:0060       .equ DIRECTORYOPEN,13
F01:0061       .equ DIRECTORYNEXTFILE,14
F01:0062       .equ GETFILENAME,15
F01:0063       .equ GETMALLOCTABLE,18
F01:0064       .equ DIV8,19
F01:0065       .equ SETRESETPAGE,20
F01:0066       .equ STARTPROCESSINFO,22
F01:0067       .equ NEXTPROCESSINFO,23
F01:0068       
F01:0069       
F01:0070       
F01:0071       
F01:0072       .equ NEXTNUMBER,26
F01:0073       
F01:0074       
F00:0005       .include "libs.inc"
F04:0001       
F04:0002       
F04:0003       	.ifdef __LIB__
F04:0004       		.ifdef __ORG__
F04:0005       			.org __ORG__
F04:0006       		.else 
F04:0007       			.org dllMemory
F04:0008       		.endif
F04:0009       		.2byte $ ;# load address
               S01:00005500:  00 55
F04:0010       		.byte ((ENDADDRESS-$)/255)+1 ;# memory required to load (in pages)
               S01:00005502:  02
F04:0011       		.ifdef __STACK__
F04:0012       			.byte __STACK__
F04:0013       		.else 
F04:0014       			.byte 1 ;# stack size (in pages)
               S01:00005503:  01
F04:0015       		.endif
F04:0016       		jp libaddress
               S01:00005504:  C3 FE 55
F04:0017       initialize:
F04:0018       	.else
F04:0019       		.ifdef __ORG__
F04:0020       			.org __ORG__
F04:0021       		.else
F04:0022       			.org userMemory
F04:0023       		.endif
F04:0024       		.2byte $ ;# load address
F04:0025       		.byte ((ENDADDRESS-$)/255)+1 ;# memory required to load (in pages)
F04:0026       		.ifdef __STACK__
F04:0027       			.byte __STACK__
F04:0028       		.else 
F04:0029       			.byte 1 ;# stack size (in pages)
F04:0030       		.endif
F04:0031       	.endif
F04:0032       
F04:0033       	ld a,PRINT
               S01:00005507:  3E 01
F04:0034       	call GetAddress
               S01:00005509:  CD 04 08
F04:0035       	ld (printadr),hl
               S01:0000550C:  22 BD 55
F04:0036       	ld a,PRINTHEX
               S01:0000550F:  3E 02
F04:0037       	call GetAddress
               S01:00005511:  CD 04 08
F04:0038       	ld (printhexadr),hl
               S01:00005514:  22 C3 55
F04:0039       	ld a,LOADFILE
               S01:00005517:  3E 03
F04:0040       	call GetAddress
               S01:00005519:  CD 04 08
F04:0041       	ld (loadfileadr),hl
               S01:0000551C:  22 C6 55
F04:0042       	ld a,MEMSET
               S01:0000551F:  3E 04
F04:0043       	call GetAddress
               S01:00005521:  CD 04 08
F04:0044       	ld (memsetadr),hl
               S01:00005524:  22 C9 55
F04:0045       	ld a,STRLEN
               S01:00005527:  3E 05
F04:0046       	call GetAddress
               S01:00005529:  CD 04 08
F04:0047       	ld (strlenadr),hl
               S01:0000552C:  22 CC 55
F04:0048       	ld a,PUTC
               S01:0000552F:  3E 06
F04:0049       	call GetAddress
               S01:00005531:  CD 04 08
F04:0050       	ld (putcadr),hl
               S01:00005534:  22 CF 55
F04:0051       	ld a,TOUPPERCASE
               S01:00005537:  3E 07
F04:0052       	call GetAddress
               S01:00005539:  CD 04 08
F04:0053       	ld (touppercaseadr),hl
               S01:0000553C:  22 D2 55
F04:0054       	ld a,HEXTOBYTE
               S01:0000553F:  3E 08
F04:0055       	call GetAddress
               S01:00005541:  CD 04 08
F04:0056       	ld (hextobyteadr),hl
               S01:00005544:  22 D5 55
F04:0057       	ld a,PRINTLN
               S01:00005547:  3E 09
F04:0058       	call GetAddress
               S01:00005549:  CD 04 08
F04:0059       	ld (printlnadr),hl
               S01:0000554C:  22 C0 55
F04:0060       	ld a,DIRECTORYOPEN
               S01:0000554F:  3E 0D
F04:0061       	call GetAddress
               S01:00005551:  CD 04 08
F04:0062       	ld (directoryopenadr),hl
               S01:00005554:  22 D8 55
F04:0063       	ld a,NEXTFILE
               S01:00005557:  3E 32
F04:0064       	call GetAddress
               S01:00005559:  CD 04 08
F04:0065       	ld (directorynextfileadr),hl
               S01:0000555C:  22 DB 55
F04:0066       	ld a,GETFILENAME
               S01:0000555F:  3E 0F
F04:0067       	call GetAddress
               S01:00005561:  CD 04 08
F04:0068       	ld (getfilenameadr),hl
               S01:00005564:  22 DE 55
F04:0069       	ld a,CREATEPROCESS
               S01:00005567:  3E 10
F04:0070       	call GetAddress
               S01:00005569:  CD 04 08
F04:0071       	ld (createProcessadr),hl
               S01:0000556C:  22 E1 55
F04:0072       	ld a,GETCOMMANDPARAMS
               S01:0000556F:  3E 11
F04:0073       	call GetAddress
               S01:00005571:  CD 04 08
F04:0074       	ld (getcommandparamsadr),hl
               S01:00005574:  22 E4 55
F04:0075       	ld a,GETMALLOCTABLE
               S01:00005577:  3E 12
F04:0076       	call GetAddress
               S01:00005579:  CD 04 08
F04:0077       	ld (getmalloctableadr),hl
               S01:0000557C:  22 E7 55
F04:0078       	ld a,DIV8
               S01:0000557F:  3E 13
F04:0079       	call GetAddress
               S01:00005581:  CD 04 08
F04:0080       	ld (div8adr),hl
               S01:00005584:  22 EA 55
F04:0081       	ld a,SETRESETPAGE
               S01:00005587:  3E 14
F04:0082       	call GetAddress
               S01:00005589:  CD 04 08
F04:0083       	ld (setresetpageadr),hl
               S01:0000558C:  22 ED 55
F04:0084       	ld a,PRINTHEXL
               S01:0000558F:  3E 15
F04:0085       	call GetAddress
               S01:00005591:  CD 04 08
F04:0086       	ld (printhexLadr),hl
               S01:00005594:  22 F0 55
F04:0087       	ld a,STARTPROCESSINFO
               S01:00005597:  3E 16
F04:0088       	call GetAddress
               S01:00005599:  CD 04 08
F04:0089       	ld (startprocessinfoadr),hl
               S01:0000559C:  22 F3 55
F04:0090       	ld a,NEXTPROCESSINFO
               S01:0000559F:  3E 17
F04:0091       	call GetAddress
               S01:000055A1:  CD 04 08
F04:0092       	ld (nextprocessinfoadr),hl
               S01:000055A4:  22 F6 55
F04:0093       	ld a,STRCPY
               S01:000055A7:  3E 18
F04:0094       	call GetAddress
               S01:000055A9:  CD 04 08
F04:0095       	ld (strcpyadr),hl
               S01:000055AC:  22 F9 55
F04:0096       	ld a,STRNCPY
               S01:000055AF:  3E 0A
F04:0097       	call GetAddress
               S01:000055B1:  CD 04 08
F04:0098       	ld (strncpyadr),hl
               S01:000055B4:  22 FC 55
F04:0099       
F04:0100       
F04:0101       
F04:0102       
F04:0103       
F04:0104       
F04:0105       	jp _main
               S01:000055B7:  C3 FE 55
F04:0106       
F04:0107       	functionlookups:
F04:0108       	.align 2
F04:0109       	print: .byte 0xc3
               S01:000055BC:  C3
F04:0110       	printadr: .2byte 0
               S01:000055BD:  00 00
F04:0111       	println: .byte 0xc3
               S01:000055BF:  C3
F04:0112       	printlnadr: .2byte 0
               S01:000055C0:  00 00
F04:0113       	printhex: .byte 0xc3
               S01:000055C2:  C3
F04:0114       	printhexadr: .2byte 0
               S01:000055C3:  00 00
F04:0115       	loadfile: .byte 0xc3
               S01:000055C5:  C3
F04:0116       	loadfileadr: .2byte 0
               S01:000055C6:  00 00
F04:0117       	memset: .byte 0xc3
               S01:000055C8:  C3
F04:0118       	memsetadr: .2byte 0
               S01:000055C9:  00 00
F04:0119       	strlen: .byte 0xc3
               S01:000055CB:  C3
F04:0120       	strlenadr: .2byte 0
               S01:000055CC:  00 00
F04:0121       	putc: .byte 0xc3
               S01:000055CE:  C3
F04:0122       	putcadr: .2byte 0
               S01:000055CF:  00 00
F04:0123       	touppercase: .byte 0xc3
               S01:000055D1:  C3
F04:0124       	touppercaseadr: .2byte 0
               S01:000055D2:  00 00
F04:0125       	hextobyte: .byte 0xc3
               S01:000055D4:  C3
F04:0126       	hextobyteadr: .2byte 0
               S01:000055D5:  00 00
F04:0127       	directoryopen: .byte 0xc3
               S01:000055D7:  C3
F04:0128       	directoryopenadr: .2byte 0
               S01:000055D8:  00 00
F04:0129       	directorynextfile: .byte 0xc3
               S01:000055DA:  C3
F04:0130       	directorynextfileadr: .2byte 0
               S01:000055DB:  00 00
F04:0131       	getfilename: .byte 0xc3
               S01:000055DD:  C3
F04:0132       	getfilenameadr: .2byte 0
               S01:000055DE:  00 00
F04:0133       	createProcess: .byte 0xc3
               S01:000055E0:  C3
F04:0134       	createProcessadr: .2byte 0
               S01:000055E1:  00 00
F04:0135       	getcommandparams: .byte 0xc3
               S01:000055E3:  C3
F04:0136       	getcommandparamsadr: .2byte 0
               S01:000055E4:  00 00
F04:0137       	getmalloctable: .byte 0xc3
               S01:000055E6:  C3
F04:0138       	getmalloctableadr: .2byte 0
               S01:000055E7:  00 00
F04:0139       	Div8: .byte 0xc3
               S01:000055E9:  C3
F04:0140       	div8adr: .2byte 0
               S01:000055EA:  00 00
F04:0141       	setresetpage: .byte 0xc3
               S01:000055EC:  C3
F04:0142       	setresetpageadr: .2byte 0
               S01:000055ED:  00 00
F04:0143       	printhexL: .byte 0xc3
               S01:000055EF:  C3
F04:0144       	printhexLadr: .2byte 0
               S01:000055F0:  00 00
F04:0145       	startprocessinfo: .byte 0xc3
               S01:000055F2:  C3
F04:0146       	startprocessinfoadr: .2byte 0
               S01:000055F3:  00 00
F04:0147       	nextprocessinfo: .byte 0xc3
               S01:000055F5:  C3
F04:0148       	nextprocessinfoadr: .2byte 0
               S01:000055F6:  00 00
F04:0149       	strcpy: .byte 0xc3
               S01:000055F8:  C3
F04:0150       	strcpyadr: .2byte 0
               S01:000055F9:  00 00
F04:0151       	strncpy: .byte 0xc3
               S01:000055FB:  C3
F04:0152       	strncpyadr: .2byte 0
               S01:000055FC:  00 00
F04:0153       
F04:0154       _main:
F04:0155       .ifdef __DLL__
F04:0156       	ret
F04:0157       .endif
F00:0006       
F00:0007       
F00:0008       
F00:0009       
F00:0010       libaddress:
F00:0011           cp 0
               S01:000055FE:  FE 00
F00:0012           jp nz,_end$:
               S01:00005600:  C2 06 56
F00:0013           jp initialize
               S01:00005603:  C3 07 55
F00:0014       #_2$:
F00:0015       #    cp TEST
F00:0016       #    jp nz, _end$
F00:0017       #    ld hl,test
F00:0018       #    ret
F00:0019       _end$:
F00:0020       #----- not defined ---
F00:0021           ld hl,0
               S01:00005606:  21 00 00
F00:0022           ret
               S01:00005609:  C9
F00:0023       
F00:0024       ENDADDRESS:


Sections:
S01  seg5500


Sources:
F00  keyboard.s
F01  Routines.inc
F02  SERIAL.inc
F03  SDCARD.inc
F04  libs.inc


Symbols:
_end$ EXPR(22022=0x5606) ABS 
strncpy EXPR(22011=0x55fb) UNUSED ABS 
strcpy EXPR(22008=0x55f8) UNUSED ABS 
nextprocessinfo EXPR(22005=0x55f5) UNUSED ABS 
startprocessinfo EXPR(22002=0x55f2) UNUSED ABS 
printhexL EXPR(21999=0x55ef) UNUSED ABS 
setresetpage EXPR(21996=0x55ec) UNUSED ABS 
Div8 EXPR(21993=0x55e9) UNUSED ABS 
getmalloctable EXPR(21990=0x55e6) UNUSED ABS 
getcommandparams EXPR(21987=0x55e3) UNUSED ABS 
createProcess EXPR(21984=0x55e0) UNUSED ABS 
getfilename EXPR(21981=0x55dd) UNUSED ABS 
directorynextfile EXPR(21978=0x55da) UNUSED ABS 
directoryopen EXPR(21975=0x55d7) UNUSED ABS 
hextobyte EXPR(21972=0x55d4) UNUSED ABS 
touppercase EXPR(21969=0x55d1) UNUSED ABS 
putc EXPR(21966=0x55ce) UNUSED ABS 
strlen EXPR(21963=0x55cb) UNUSED ABS 
memset EXPR(21960=0x55c8) UNUSED ABS 
loadfile EXPR(21957=0x55c5) UNUSED ABS 
printhex EXPR(21954=0x55c2) UNUSED ABS 
println EXPR(21951=0x55bf) UNUSED ABS 
print EXPR(21948=0x55bc) UNUSED ABS 
functionlookups EXPR(21946=0x55ba) UNUSED ABS 
_main EXPR(22014=0x55fe) ABS 
strncpyadr EXPR(22012=0x55fc) ABS 
strcpyadr EXPR(22009=0x55f9) ABS 
nextprocessinfoadr EXPR(22006=0x55f6) ABS 
startprocessinfoadr EXPR(22003=0x55f3) ABS 
printhexLadr EXPR(22000=0x55f0) ABS 
setresetpageadr EXPR(21997=0x55ed) ABS 
div8adr EXPR(21994=0x55ea) ABS 
getmalloctableadr EXPR(21991=0x55e7) ABS 
getcommandparamsadr EXPR(21988=0x55e4) ABS 
createProcessadr EXPR(21985=0x55e1) ABS 
getfilenameadr EXPR(21982=0x55de) ABS 
directorynextfileadr EXPR(21979=0x55db) ABS 
directoryopenadr EXPR(21976=0x55d8) ABS 
printlnadr EXPR(21952=0x55c0) ABS 
hextobyteadr EXPR(21973=0x55d5) ABS 
touppercaseadr EXPR(21970=0x55d2) ABS 
putcadr EXPR(21967=0x55cf) ABS 
strlenadr EXPR(21964=0x55cc) ABS 
memsetadr EXPR(21961=0x55c9) ABS 
loadfileadr EXPR(21958=0x55c6) ABS 
printhexadr EXPR(21955=0x55c3) ABS 
printadr EXPR(21949=0x55bd) ABS 
initialize EXPR(21767=0x5507) ABS 
libaddress EXPR(22014=0x55fe) ABS 
ENDADDRESS EXPR(22026=0x560a) ABS 
 *current pc dummy* EXPR(21762=0x5502) INTERNAL PROT ABS 
NEXTNUMBER EXPR(26=0x1a) UNUSED 
NEXTPROCESSINFO EXPR(23=0x17) 
STARTPROCESSINFO EXPR(22=0x16) 
SETRESETPAGE EXPR(20=0x14) 
DIV8 EXPR(19=0x13) 
GETMALLOCTABLE EXPR(18=0x12) 
GETFILENAME EXPR(15=0xf) 
DIRECTORYNEXTFILE EXPR(14=0xe) UNUSED 
DIRECTORYOPEN EXPR(13=0xd) 
GETCOMMANDPARAMS EXPR(17=0x11) 
CREATEPROCESS EXPR(16=0x10) 
HEXTOBYTE EXPR(8=0x8) 
TOUPPERCASE EXPR(7=0x7) 
PUTC EXPR(6=0x6) 
STRNCPY EXPR(10=0xa) 
STRCPY EXPR(24=0x18) 
STRLEN EXPR(5=0x5) 
MEMSET EXPR(4=0x4) 
LOADFILE EXPR(3=0x3) 
PRINTHEXL EXPR(21=0x15) 
PRINTHEX EXPR(2=0x2) 
PRINTLN EXPR(9=0x9) 
PRINT EXPR(1=0x1) 
GetAddress EXPR(2052=0x804) 
FALSE EXPR(0=0x0) UNUSED 
TRUE EXPR(1=0x1) UNUSED 
libMemory EXPR(61440=0xf000) UNUSED 
userMemory EXPR(12288=0x3000) UNUSED 
commandMemory EXPR(8192=0x2000) UNUSED 
NEXTFILE EXPR(50=0x32) 
OPENDIRECTORY EXPR(49=0x31) UNUSED 
NAMEAVAILABLE EXPR(33=0x21) UNUSED 
GETNAME EXPR(32=0x20) UNUSED 
WRITEBYTE EXPR(8=0x8) UNUSED 
OPENWRITE EXPR(7=0x7) UNUSED 
AVAILABLE EXPR(6=0x6) UNUSED 
READNEXTBYTE EXPR(5=0x5) UNUSED 
FILENAMEAPPEND EXPR(4=0x4) UNUSED 
CLOSE EXPR(3=0x3) UNUSED 
OPEN EXPR(2=0x2) UNUSED 
FILENAMECLEAR EXPR(1=0x1) UNUSED 
SDCARD EXPR(5=0x5) UNUSED 
SERIALPORT2 EXPR(2=0x2) UNUSED 
SERIALPORT EXPR(1=0x1) UNUSED 
__ORG__ EXPR(21760=0x5500) 
__LIB__ EXPR(1=0x1) UNUSED 
__VASM EXPR(0=0x0) INTERNAL 
__MSDOSFS EXPR(0=0x0) INTERNAL 

There have been no errors.

F00:0001       
F00:0002       .include "Routines.inc"
F01:0001       
F01:0002       # address where user programs load
F01:0003       .include "SERIAL.inc"
F02:0001       .equ SERIALPORT , 0x01
F02:0002       
F01:0004       .include "SDCARD.inc"
F03:0001       .equ SDCARD,0x05
F03:0002       ; ******* SDCARD *********
F03:0003       ; z80 out -filenameclear: no return value, will close the previous open file is one already open
F03:0004       .equ FILENAMECLEAR ,1
F03:0005       
F03:0006       ; z80 out + in -open: will return a status 1 if file open successfull, 0 if open failed
F03:0007       .equ OPEN ,2
F03:0008       
F03:0009       ; z80 out - close: no return value
F03:0010       .equ CLOSE ,3
F03:0011       
F03:0012       ; z80 out + out - filenameappend: no return value
F03:0013       .equ FILENAMEAPPEND ,4
F03:0014       
F03:0015       ; z80 out + in - readnextbyte: will return 0xFF is nothing to read, which might be a problem if you don't check the avai
F03:0016       .equ READNEXTBYTE ,5
F03:0017       
F03:0018       ; z80 out + in - available: return 1 is data is available, 0 if no data available
F03:0019       .equ AVAILABLE ,6
F03:0020       
F03:0021       ; z80 out + in - openwrite: open file for write ,will return a status 1 if file open successfull, 0 if open failed
F03:0022       .equ OPENWRITE,7
F03:0023       
F03:0024       ; z80 - out + out -writebyte: will write data to an open file,is no file is open or the file is not writable nothing wil
F03:0025       .equ WRITEBYTE,8
F03:0026       
F03:0027       ;#===============================
F03:0028       ; z80 - out -getname: prepares to get the openfilename, use NAMEAVAILABLE to read the bytes, no return value
F03:0029       .equ GETNAME,0x20
F03:0030       ; z80 out + in - nameavailable: return next character of the filename, or 0 it no more characters
F03:0031       .equ NAMEAVAILABLE,0x21
F03:0032       ;z80 - out - opendirectory : will open the root directory for directory listing, no return value
F03:0033       .equ OPENDIRECTORY,0x31
F03:0034       ;z80 -out - nextfile: move to the next directory entry, no return value
F03:0035       .equ NEXTFILE,0x32
F01:0005       .equ commandMemory, 0x1000
F01:0006       .equ userMemory,0x2000
F01:0007       
F01:0008       .equ TRUE, 1
F01:0009       .equ FALSE, 0
F01:0010       
F01:0011       # the only fixed address (i hope), use it to get the address of utilities methods
F01:0012       # ld a, PRINT
F01:0013       # call GetAddress
F01:0014       # address for print loaded into hl
F01:0015       # the value in hl can change between os versions so do not hard code the values
F01:0016       
F01:0017       .equ GetAddress, 0x0804
F01:0018       .equ PRINT,		1
F01:0019       .equ PRINTLN,	9
F01:0020       .equ PRINTHEX,	2
F01:0021       .equ LOADFILE,	3
F01:0022       .equ MEMSET,	4
F01:0023       .equ STRLEN,	5
F01:0024       .equ PUTC,		6
F01:0025       .equ TOUPPERCASE,7
F01:0026       .equ HEXTOBYTE,	8
F01:0027       .equ STRNCPY,10
F01:0028       .equ CREATEPROCESS,16
F01:0029       .equ GETCOMMANDPARAMS,17
F01:0030       # filesystem - primitive functions, probably going to change 
F01:0031       .equ DIRECTORYOPEN,13
F01:0032       .equ DIRECTORYNEXTFILE,14
F01:0033       .equ GETFILENAME,15
F01:0034       
F01:0035       
F01:0036       
F01:0037       .equ NEXTNUMBER,18
F01:0038       
F01:0039       
F00:0003       .include "libs.inc"
F04:0001       
F04:0002       .ifndef __CMD__
F04:0003       	.org userMemory
F04:0004       .endif
F04:0005       	ld a,PRINT
               S01:00002000:  3E 01
F04:0006       	call GetAddress
               S01:00002002:  CD 04 08
F04:0007       	ld (printadr),hl
               S01:00002005:  22 75 20
F04:0008       	ld a,PRINTHEX
               S01:00002008:  3E 02
F04:0009       	call GetAddress
               S01:0000200A:  CD 04 08
F04:0010       	ld (printhexadr),hl
               S01:0000200D:  22 7B 20
F04:0011       	ld a,LOADFILE
               S01:00002010:  3E 03
F04:0012       	call GetAddress
               S01:00002012:  CD 04 08
F04:0013       	ld (loadfileadr),hl
               S01:00002015:  22 7E 20
F04:0014       	ld a,MEMSET
               S01:00002018:  3E 04
F04:0015       	call GetAddress
               S01:0000201A:  CD 04 08
F04:0016       	ld (memsetadr),hl
               S01:0000201D:  22 81 20
F04:0017       	ld a,STRLEN
               S01:00002020:  3E 05
F04:0018       	call GetAddress
               S01:00002022:  CD 04 08
F04:0019       	ld (strlenadr),hl
               S01:00002025:  22 84 20
F04:0020       	ld a,PUTC
               S01:00002028:  3E 06
F04:0021       	call GetAddress
               S01:0000202A:  CD 04 08
F04:0022       	ld (putcadr),hl
               S01:0000202D:  22 87 20
F04:0023       	ld a,TOUPPERCASE
               S01:00002030:  3E 07
F04:0024       	call GetAddress
               S01:00002032:  CD 04 08
F04:0025       	ld (touppercaseadr),hl
               S01:00002035:  22 8A 20
F04:0026       	ld a,HEXTOBYTE
               S01:00002038:  3E 08
F04:0027       	call GetAddress
               S01:0000203A:  CD 04 08
F04:0028       	ld (hextobyteadr),hl
               S01:0000203D:  22 8D 20
F04:0029       	ld a,PRINTLN
               S01:00002040:  3E 09
F04:0030       	call GetAddress
               S01:00002042:  CD 04 08
F04:0031       	ld (printlnadr),hl
               S01:00002045:  22 78 20
F04:0032       	ld a,DIRECTORYOPEN
               S01:00002048:  3E 0D
F04:0033       	call GetAddress
               S01:0000204A:  CD 04 08
F04:0034       	ld (directoryopenadr),hl
               S01:0000204D:  22 90 20
F04:0035       	ld a,NEXTFILE
               S01:00002050:  3E 32
F04:0036       	call GetAddress
               S01:00002052:  CD 04 08
F04:0037       	ld (directorynextfileadr),hl
               S01:00002055:  22 93 20
F04:0038       	ld a,GETFILENAME
               S01:00002058:  3E 0F
F04:0039       	call GetAddress
               S01:0000205A:  CD 04 08
F04:0040       	ld (getfilenameadr),hl
               S01:0000205D:  22 96 20
F04:0041       	ld a,CREATEPROCESS
               S01:00002060:  3E 10
F04:0042       	call GetAddress
               S01:00002062:  CD 04 08
F04:0043       	ld (createProcessadr),hl
               S01:00002065:  22 99 20
F04:0044       	ld a,GETCOMMANDPARAMS
               S01:00002068:  3E 11
F04:0045       	call GetAddress
               S01:0000206A:  CD 04 08
F04:0046       	ld (getcommandparamsadr),hl
               S01:0000206D:  22 9C 20
F04:0047       
F04:0048       
F04:0049       	jp _main
               S01:00002070:  C3 9E 20
F04:0050       
F04:0051       	functionlookups:
F04:0052       	.align 2
F04:0053       	print: .byte 0xc3
               S01:00002074:  C3
F04:0054       	printadr: .2byte 0
               S01:00002075:  00 00
F04:0055       	println: .byte 0xc3
               S01:00002077:  C3
F04:0056       	printlnadr: .2byte 0
               S01:00002078:  00 00
F04:0057       	printhex: .byte 0xc3
               S01:0000207A:  C3
F04:0058       	printhexadr: .2byte 0
               S01:0000207B:  00 00
F04:0059       	loadfile: .byte 0xc3
               S01:0000207D:  C3
F04:0060       	loadfileadr: .2byte 0
               S01:0000207E:  00 00
F04:0061       	memset: .byte 0xc3
               S01:00002080:  C3
F04:0062       	memsetadr: .2byte 0
               S01:00002081:  00 00
F04:0063       	strlen: .byte 0xc3
               S01:00002083:  C3
F04:0064       	strlenadr: .2byte 0
               S01:00002084:  00 00
F04:0065       	putc: .byte 0xc3
               S01:00002086:  C3
F04:0066       	putcadr: .2byte 0
               S01:00002087:  00 00
F04:0067       	touppercase: .byte 0xc3
               S01:00002089:  C3
F04:0068       	touppercaseadr: .2byte 0
               S01:0000208A:  00 00
F04:0069       	hextobyte: .byte 0xc3
               S01:0000208C:  C3
F04:0070       	hextobyteadr: .2byte 0
               S01:0000208D:  00 00
F04:0071       	directoryopen: .byte 0xc3
               S01:0000208F:  C3
F04:0072       	directoryopenadr: .2byte 0
               S01:00002090:  00 00
F04:0073       	directorynextfile: .byte 0xc3
               S01:00002092:  C3
F04:0074       	directorynextfileadr: .2byte 0
               S01:00002093:  00 00
F04:0075       	getfilename: .byte 0xc3
               S01:00002095:  C3
F04:0076       	getfilenameadr: .2byte 0
               S01:00002096:  00 00
F04:0077       	createProcess: .byte 0xc3
               S01:00002098:  C3
F04:0078       	createProcessadr: .2byte 0
               S01:00002099:  00 00
F04:0079       	getcommandparams: .byte 0xc3
               S01:0000209B:  C3
F04:0080       	getcommandparamsadr: .2byte 0
               S01:0000209C:  00 00
F04:0081       
F04:0082       _main:
F00:0004       
F00:0005       
F00:0006       	ld hl,dirmsg
               S01:0000209E:  21 CC 20
F00:0007       	call println
               S01:000020A1:  CD 77 20
F00:0008       	call directoryopen
               S01:000020A4:  CD 8F 20
F00:0009       currentfile:
F00:0010       	ld hl,thisfilename
               S01:000020A7:  21 BD 20
F00:0011       	call getfilename
               S01:000020AA:  CD 95 20
F00:0012       ;#	ld hl,thisfilename
F00:0013       	call println
               S01:000020AD:  CD 77 20
F00:0014       
F00:0015       ;#	ld hl,thisfilename
F00:0016       	ld a,(hl)
               S01:000020B0:  7E
F00:0017       	cp 0
               S01:000020B1:  FE 00
F00:0018       	jp z,_exit$1
               S01:000020B3:  CA BC 20
F00:0019       
F00:0020       	call directorynextfile
               S01:000020B6:  CD 92 20
F00:0021       
F00:0022       	jp currentfile
               S01:000020B9:  C3 A7 20
F00:0023       
F00:0024       _exit$1:
F00:0025       
F00:0026       	ret
               S01:000020BC:  C9
F00:0027       
F00:0028       
F00:0029       
F00:0030       
F00:0031       
F00:0032       thisfilename: .space 15
F00:0033       dirmsg: .string "\r\nDIRECTORY\r\n"
               S01:000020CC:  0D 0A 44 49 52 45 43 54 4F 52 59 0D 0A


Sections:
S01  seg2000


Sources:
F00  dir.s
F01  Routines.inc
F02  SERIAL.inc
F03  SDCARD.inc
F04  libs.inc


Symbols:
_exit$1 EXPR(8380=0x20bc) ABS 
thisfilename EXPR(8381=0x20bd) ABS 
currentfile EXPR(8359=0x20a7) ABS 
dirmsg EXPR(8396=0x20cc) ABS 
getcommandparams EXPR(8347=0x209b) UNUSED ABS 
createProcess EXPR(8344=0x2098) UNUSED ABS 
getfilename EXPR(8341=0x2095) ABS 
directorynextfile EXPR(8338=0x2092) ABS 
directoryopen EXPR(8335=0x208f) ABS 
hextobyte EXPR(8332=0x208c) UNUSED ABS 
touppercase EXPR(8329=0x2089) UNUSED ABS 
putc EXPR(8326=0x2086) UNUSED ABS 
strlen EXPR(8323=0x2083) UNUSED ABS 
memset EXPR(8320=0x2080) UNUSED ABS 
loadfile EXPR(8317=0x207d) UNUSED ABS 
printhex EXPR(8314=0x207a) UNUSED ABS 
println EXPR(8311=0x2077) ABS 
print EXPR(8308=0x2074) UNUSED ABS 
functionlookups EXPR(8307=0x2073) UNUSED ABS 
_main EXPR(8350=0x209e) ABS 
getcommandparamsadr EXPR(8348=0x209c) ABS 
createProcessadr EXPR(8345=0x2099) ABS 
getfilenameadr EXPR(8342=0x2096) ABS 
directorynextfileadr EXPR(8339=0x2093) ABS 
directoryopenadr EXPR(8336=0x2090) ABS 
printlnadr EXPR(8312=0x2078) ABS 
hextobyteadr EXPR(8333=0x208d) ABS 
touppercaseadr EXPR(8330=0x208a) ABS 
putcadr EXPR(8327=0x2087) ABS 
strlenadr EXPR(8324=0x2084) ABS 
memsetadr EXPR(8321=0x2081) ABS 
loadfileadr EXPR(8318=0x207e) ABS 
printhexadr EXPR(8315=0x207b) ABS 
printadr EXPR(8309=0x2075) ABS 
NEXTNUMBER EXPR(18=0x12) UNUSED 
GETFILENAME EXPR(15=0xf) 
DIRECTORYNEXTFILE EXPR(14=0xe) UNUSED 
DIRECTORYOPEN EXPR(13=0xd) 
GETCOMMANDPARAMS EXPR(17=0x11) 
CREATEPROCESS EXPR(16=0x10) 
STRNCPY EXPR(10=0xa) UNUSED 
HEXTOBYTE EXPR(8=0x8) 
TOUPPERCASE EXPR(7=0x7) 
PUTC EXPR(6=0x6) 
STRLEN EXPR(5=0x5) 
MEMSET EXPR(4=0x4) 
LOADFILE EXPR(3=0x3) 
PRINTHEX EXPR(2=0x2) 
PRINTLN EXPR(9=0x9) 
PRINT EXPR(1=0x1) 
GetAddress EXPR(2052=0x804) 
FALSE EXPR(0=0x0) UNUSED 
TRUE EXPR(1=0x1) UNUSED 
userMemory EXPR(8192=0x2000) 
commandMemory EXPR(4096=0x1000) UNUSED 
NEXTFILE EXPR(50=0x32) 
OPENDIRECTORY EXPR(49=0x31) UNUSED 
NAMEAVAILABLE EXPR(33=0x21) UNUSED 
GETNAME EXPR(32=0x20) UNUSED 
WRITEBYTE EXPR(8=0x8) UNUSED 
OPENWRITE EXPR(7=0x7) UNUSED 
AVAILABLE EXPR(6=0x6) UNUSED 
READNEXTBYTE EXPR(5=0x5) UNUSED 
FILENAMEAPPEND EXPR(4=0x4) UNUSED 
CLOSE EXPR(3=0x3) UNUSED 
OPEN EXPR(2=0x2) UNUSED 
FILENAMECLEAR EXPR(1=0x1) UNUSED 
SDCARD EXPR(5=0x5) UNUSED 
SERIALPORT EXPR(1=0x1) UNUSED 
__VASM EXPR(0=0x0) INTERNAL 
__MSDOSFS EXPR(0=0x0) INTERNAL 

There have been no errors.

F00:0001       .include "Routines.inc"
F01:0001       
F01:0002       .macro DEBUG CHARACTER='!'
F01:0009       
F01:0010       
F01:0011       .macro DEBUGHEX CHARACTER='!'
F01:0018       
F01:0019       
F01:0020       .macro PRINTLN
F01:0025       
F01:0026       
F01:0027       
F01:0028       # address where user programs load
F01:0029       .include "SERIAL.inc"
F02:0001       .equ SERIALPORT , 0x01
F02:0002       .equ SERIALPORT2, 0x02
F02:0003       
F01:0030       .include "SDCARD.inc"
F03:0001       .equ SDCARD,0x05
F03:0002       ; ******* SDCARD *********
F03:0003       ; z80 out -filenameclear: no return value, will close the previous open file is one already open
F03:0004       .equ FILENAMECLEAR ,1
F03:0005       
F03:0006       ; z80 out + in -open: will return a status 1 if file open successfull, 0 if open failed
F03:0007       .equ OPEN ,2
F03:0008       
F03:0009       ; z80 out - close: no return value
F03:0010       .equ CLOSE ,3
F03:0011       
F03:0012       ; z80 out + out - filenameappend: no return value
F03:0013       .equ FILENAMEAPPEND ,4
F03:0014       
F03:0015       ; z80 out + in - readnextbyte: will return 0xFF is nothing to read, which might be a problem if you don't check the avai
F03:0016       .equ READNEXTBYTE ,5
F03:0017       
F03:0018       ; z80 out + in - available: return 1 is data is available, 0 if no data available
F03:0019       .equ AVAILABLE ,6
F03:0020       
F03:0021       ; z80 out + in - openwrite: open file for write ,will return a status 1 if file open successfull, 0 if open failed
F03:0022       .equ OPENWRITE,7
F03:0023       
F03:0024       ; z80 - out + out -writebyte: will write data to an open file,is no file is open or the file is not writable nothing wil
F03:0025       .equ WRITEBYTE,8
F03:0026       
F03:0027       ;#===============================
F03:0028       ; z80 - out -getname: prepares to get the openfilename, use NAMEAVAILABLE to read the bytes, no return value
F03:0029       .equ GETNAME,0x20
F03:0030       ; z80 out + in - nameavailable: return next character of the filename, or 0 it no more characters
F03:0031       .equ NAMEAVAILABLE,0x21
F03:0032       ;z80 - out - opendirectory : will open the root directory for directory listing, no return value
F03:0033       .equ OPENDIRECTORY,0x31
F03:0034       ;z80 -out - nextfile: move to the next directory entry, no return value
F03:0035       .equ NEXTFILE,0x32
F01:0031       .equ commandMemory, 0x2000
F01:0032       .equ userMemory,0x3000
F01:0033       .equ libMemory,0xF000
F01:0034       
F01:0035       .equ TRUE, 1
F01:0036       .equ FALSE, 0
F01:0037       
F01:0038       # the only fixed address (i hope), use it to get the address of utilities methods
F01:0039       # ld a, PRINT
F01:0040       # call GetAddress
F01:0041       # address for print loaded into hl
F01:0042       # the value in hl can change between os versions so do not hard code the values
F01:0043       
F01:0044       .equ GetAddress, 0x0804
F01:0045       .equ PRINT,		1
F01:0046       .equ PRINTLN,	9
F01:0047       .equ PRINTHEX,	2
F01:0048       .equ PRINTHEXL,21
F01:0049       .equ LOADFILE,	3
F01:0050       .equ MEMSET,	4
F01:0051       .equ STRLEN,	5
F01:0052       .equ STRCPY,24
F01:0053       .equ STRNCPY,10
F01:0054       .equ PUTC,		6
F01:0055       .equ TOUPPERCASE,7
F01:0056       .equ HEXTOBYTE,	8
F01:0057       .equ CREATEPROCESS,16
F01:0058       .equ GETCOMMANDPARAMS,17
F01:0059       # filesystem - primitive functions, probably going to change 
F01:0060       .equ DIRECTORYOPEN,13
F01:0061       .equ DIRECTORYNEXTFILE,14
F01:0062       .equ GETFILENAME,15
F01:0063       .equ GETMALLOCTABLE,18
F01:0064       .equ DIV8,19
F01:0065       .equ SETRESETPAGE,20
F01:0066       .equ STARTPROCESSINFO,22
F01:0067       .equ NEXTPROCESSINFO,23
F01:0068       
F01:0069       
F01:0070       
F01:0071       
F01:0072       .equ NEXTNUMBER,26
F01:0073       
F01:0074       
F00:0002       .include "libs.inc"
F04:0001       
F04:0002       
F04:0003       	.ifdef __LIB__
F04:0004       		.ifdef __ORG__
F04:0005       			.org __ORG__
F04:0006       		.else 
F04:0007       			.org dllMemory
F04:0008       		.endif
F04:0009       		.2byte $ ;# load address
F04:0010       		.byte ((ENDADDRESS-$)/255)+1 ;# memory required to load (in pages)
F04:0011       		.ifdef __STACK__
F04:0012       			.byte __STACK__
F04:0013       		.else 
F04:0014       			.byte 1 ;# stack size (in pages)
F04:0015       		.endif
F04:0016       		jp libaddress
F04:0017       initialize:
F04:0018       	.else
F04:0019       		.ifdef __ORG__
F04:0020       			.org __ORG__
F04:0021       		.else
F04:0022       			.org userMemory
F04:0023       		.endif
F04:0024       		.2byte $ ;# load address
               S01:00003000:  00 30
F04:0025       		.byte ((ENDADDRESS-$)/255)+1 ;# memory required to load (in pages)
               S01:00003002:  04
F04:0026       		.ifdef __STACK__
F04:0027       			.byte __STACK__
F04:0028       		.else 
F04:0029       			.byte 1 ;# stack size (in pages)
               S01:00003003:  01
F04:0030       		.endif
F04:0031       	.endif
F04:0032       
F04:0033       	ld a,PRINT
               S01:00003004:  3E 01
F04:0034       	call GetAddress
               S01:00003006:  CD 04 08
F04:0035       	ld (printadr),hl
               S01:00003009:  22 B9 30
F04:0036       	ld a,PRINTHEX
               S01:0000300C:  3E 02
F04:0037       	call GetAddress
               S01:0000300E:  CD 04 08
F04:0038       	ld (printhexadr),hl
               S01:00003011:  22 BF 30
F04:0039       	ld a,LOADFILE
               S01:00003014:  3E 03
F04:0040       	call GetAddress
               S01:00003016:  CD 04 08
F04:0041       	ld (loadfileadr),hl
               S01:00003019:  22 C2 30
F04:0042       	ld a,MEMSET
               S01:0000301C:  3E 04
F04:0043       	call GetAddress
               S01:0000301E:  CD 04 08
F04:0044       	ld (memsetadr),hl
               S01:00003021:  22 C5 30
F04:0045       	ld a,STRLEN
               S01:00003024:  3E 05
F04:0046       	call GetAddress
               S01:00003026:  CD 04 08
F04:0047       	ld (strlenadr),hl
               S01:00003029:  22 C8 30
F04:0048       	ld a,PUTC
               S01:0000302C:  3E 06
F04:0049       	call GetAddress
               S01:0000302E:  CD 04 08
F04:0050       	ld (putcadr),hl
               S01:00003031:  22 CB 30
F04:0051       	ld a,TOUPPERCASE
               S01:00003034:  3E 07
F04:0052       	call GetAddress
               S01:00003036:  CD 04 08
F04:0053       	ld (touppercaseadr),hl
               S01:00003039:  22 CE 30
F04:0054       	ld a,HEXTOBYTE
               S01:0000303C:  3E 08
F04:0055       	call GetAddress
               S01:0000303E:  CD 04 08
F04:0056       	ld (hextobyteadr),hl
               S01:00003041:  22 D1 30
F04:0057       	ld a,PRINTLN
               S01:00003044:  3E 09
F04:0058       	call GetAddress
               S01:00003046:  CD 04 08
F04:0059       	ld (printlnadr),hl
               S01:00003049:  22 BC 30
F04:0060       	ld a,DIRECTORYOPEN
               S01:0000304C:  3E 0D
F04:0061       	call GetAddress
               S01:0000304E:  CD 04 08
F04:0062       	ld (directoryopenadr),hl
               S01:00003051:  22 D4 30
F04:0063       	ld a,NEXTFILE
               S01:00003054:  3E 32
F04:0064       	call GetAddress
               S01:00003056:  CD 04 08
F04:0065       	ld (directorynextfileadr),hl
               S01:00003059:  22 D7 30
F04:0066       	ld a,GETFILENAME
               S01:0000305C:  3E 0F
F04:0067       	call GetAddress
               S01:0000305E:  CD 04 08
F04:0068       	ld (getfilenameadr),hl
               S01:00003061:  22 DA 30
F04:0069       	ld a,CREATEPROCESS
               S01:00003064:  3E 10
F04:0070       	call GetAddress
               S01:00003066:  CD 04 08
F04:0071       	ld (createProcessadr),hl
               S01:00003069:  22 DD 30
F04:0072       	ld a,GETCOMMANDPARAMS
               S01:0000306C:  3E 11
F04:0073       	call GetAddress
               S01:0000306E:  CD 04 08
F04:0074       	ld (getcommandparamsadr),hl
               S01:00003071:  22 E0 30
F04:0075       	ld a,GETMALLOCTABLE
               S01:00003074:  3E 12
F04:0076       	call GetAddress
               S01:00003076:  CD 04 08
F04:0077       	ld (getmalloctableadr),hl
               S01:00003079:  22 E3 30
F04:0078       	ld a,DIV8
               S01:0000307C:  3E 13
F04:0079       	call GetAddress
               S01:0000307E:  CD 04 08
F04:0080       	ld (div8adr),hl
               S01:00003081:  22 E6 30
F04:0081       	ld a,SETRESETPAGE
               S01:00003084:  3E 14
F04:0082       	call GetAddress
               S01:00003086:  CD 04 08
F04:0083       	ld (setresetpageadr),hl
               S01:00003089:  22 E9 30
F04:0084       	ld a,PRINTHEXL
               S01:0000308C:  3E 15
F04:0085       	call GetAddress
               S01:0000308E:  CD 04 08
F04:0086       	ld (printhexLadr),hl
               S01:00003091:  22 EC 30
F04:0087       	ld a,STARTPROCESSINFO
               S01:00003094:  3E 16
F04:0088       	call GetAddress
               S01:00003096:  CD 04 08
F04:0089       	ld (startprocessinfoadr),hl
               S01:00003099:  22 EF 30
F04:0090       	ld a,NEXTPROCESSINFO
               S01:0000309C:  3E 17
F04:0091       	call GetAddress
               S01:0000309E:  CD 04 08
F04:0092       	ld (nextprocessinfoadr),hl
               S01:000030A1:  22 F2 30
F04:0093       	ld a,STRCPY
               S01:000030A4:  3E 18
F04:0094       	call GetAddress
               S01:000030A6:  CD 04 08
F04:0095       	ld (strcpyadr),hl
               S01:000030A9:  22 F5 30
F04:0096       	ld a,STRNCPY
               S01:000030AC:  3E 0A
F04:0097       	call GetAddress
               S01:000030AE:  CD 04 08
F04:0098       	ld (strncpyadr),hl
               S01:000030B1:  22 F8 30
F04:0099       
F04:0100       
F04:0101       
F04:0102       
F04:0103       
F04:0104       
F04:0105       	jp _main
               S01:000030B4:  C3 FA 30
F04:0106       
F04:0107       	functionlookups:
F04:0108       	.align 2
F04:0109       	print: .byte 0xc3
               S01:000030B8:  C3
F04:0110       	printadr: .2byte 0
               S01:000030B9:  00 00
F04:0111       	println: .byte 0xc3
               S01:000030BB:  C3
F04:0112       	printlnadr: .2byte 0
               S01:000030BC:  00 00
F04:0113       	printhex: .byte 0xc3
               S01:000030BE:  C3
F04:0114       	printhexadr: .2byte 0
               S01:000030BF:  00 00
F04:0115       	loadfile: .byte 0xc3
               S01:000030C1:  C3
F04:0116       	loadfileadr: .2byte 0
               S01:000030C2:  00 00
F04:0117       	memset: .byte 0xc3
               S01:000030C4:  C3
F04:0118       	memsetadr: .2byte 0
               S01:000030C5:  00 00
F04:0119       	strlen: .byte 0xc3
               S01:000030C7:  C3
F04:0120       	strlenadr: .2byte 0
               S01:000030C8:  00 00
F04:0121       	putc: .byte 0xc3
               S01:000030CA:  C3
F04:0122       	putcadr: .2byte 0
               S01:000030CB:  00 00
F04:0123       	touppercase: .byte 0xc3
               S01:000030CD:  C3
F04:0124       	touppercaseadr: .2byte 0
               S01:000030CE:  00 00
F04:0125       	hextobyte: .byte 0xc3
               S01:000030D0:  C3
F04:0126       	hextobyteadr: .2byte 0
               S01:000030D1:  00 00
F04:0127       	directoryopen: .byte 0xc3
               S01:000030D3:  C3
F04:0128       	directoryopenadr: .2byte 0
               S01:000030D4:  00 00
F04:0129       	directorynextfile: .byte 0xc3
               S01:000030D6:  C3
F04:0130       	directorynextfileadr: .2byte 0
               S01:000030D7:  00 00
F04:0131       	getfilename: .byte 0xc3
               S01:000030D9:  C3
F04:0132       	getfilenameadr: .2byte 0
               S01:000030DA:  00 00
F04:0133       	createProcess: .byte 0xc3
               S01:000030DC:  C3
F04:0134       	createProcessadr: .2byte 0
               S01:000030DD:  00 00
F04:0135       	getcommandparams: .byte 0xc3
               S01:000030DF:  C3
F04:0136       	getcommandparamsadr: .2byte 0
               S01:000030E0:  00 00
F04:0137       	getmalloctable: .byte 0xc3
               S01:000030E2:  C3
F04:0138       	getmalloctableadr: .2byte 0
               S01:000030E3:  00 00
F04:0139       	Div8: .byte 0xc3
               S01:000030E5:  C3
F04:0140       	div8adr: .2byte 0
               S01:000030E6:  00 00
F04:0141       	setresetpage: .byte 0xc3
               S01:000030E8:  C3
F04:0142       	setresetpageadr: .2byte 0
               S01:000030E9:  00 00
F04:0143       	printhexL: .byte 0xc3
               S01:000030EB:  C3
F04:0144       	printhexLadr: .2byte 0
               S01:000030EC:  00 00
F04:0145       	startprocessinfo: .byte 0xc3
               S01:000030EE:  C3
F04:0146       	startprocessinfoadr: .2byte 0
               S01:000030EF:  00 00
F04:0147       	nextprocessinfo: .byte 0xc3
               S01:000030F1:  C3
F04:0148       	nextprocessinfoadr: .2byte 0
               S01:000030F2:  00 00
F04:0149       	strcpy: .byte 0xc3
               S01:000030F4:  C3
F04:0150       	strcpyadr: .2byte 0
               S01:000030F5:  00 00
F04:0151       	strncpy: .byte 0xc3
               S01:000030F7:  C3
F04:0152       	strncpyadr: .2byte 0
               S01:000030F8:  00 00
F04:0153       
F04:0154       _main:
F04:0155       .ifdef __DLL__
F04:0156       	ret
F04:0157       .endif
F00:0003       
F00:0004       .equ buffersize,9
F00:0005       
F00:0006       	di
               S01:000030FA:  F3
F00:0007       	im 2
               S01:000030FB:  ED 5E
F00:0008       	ld a, interruptvectors/256
               S01:000030FD:  3E 32
F00:0009       	ld i,a
               S01:000030FF:  ED 47
F00:0010       	ei
               S01:00003101:  FB
F00:0011       
F00:0012       loop:
F00:0013       	call available
               S01:00003102:  CD 25 31
F00:0014       	cp 0
               S01:00003105:  FE 00
F00:0015       	jp z, loop
               S01:00003107:  CA 02 31
F00:0016       
F00:0017       1$:
F00:0018       	call getc
               S01:0000310A:  CD 29 31
F00:0019       	cp 0x1b
               S01:0000310D:  FE 1B
F00:0020       	jp z,exit
               S01:0000310F:  CA 22 31
F00:0021       	call putc
               S01:00003112:  CD CA 30
F00:0022       	
F00:0023       	cp 0x0d
               S01:00003115:  FE 0D
F00:0024       	jp nz,loop
               S01:00003117:  C2 02 31
F00:0025       	ld a,0x0a
               S01:0000311A:  3E 0A
F00:0026       	call putc
               S01:0000311C:  CD CA 30
F00:0027       	jp loop
               S01:0000311F:  C3 02 31
F00:0028       
F00:0029       
F00:0030       exit:
F00:0031       	ld a,0
               S01:00003122:  3E 00
F00:0032       	ret
               S01:00003124:  C9
F00:0033       
F00:0034       available: ;# return number of characters in the buffer
F00:0035       	ld a,(Counter)
               S01:00003125:  3A D8 31
F00:0036       	ret
               S01:00003128:  C9
F00:0037       
F00:0038       getc:
F00:0039       	push bc
               S01:00003129:  C5
F00:0040       	push ix
               S01:0000312A:  DD E5
F00:0041       
F00:0042       	ld a,(Counter) ;# cannot getc if there are no characters to get
               S01:0000312C:  3A D8 31
F00:0043       	cp 0
               S01:0000312F:  FE 00
F00:0044       	jp z,1$
               S01:00003131:  CA 5D 31
F00:0045       
F00:0046       	ld a,(Rindex)
               S01:00003134:  3A D9 31
F00:0047       	cp buffersize
               S01:00003137:  FE 09
F00:0048       	jp nz,2$
               S01:00003139:  C2 41 31
F00:0049       	ld a,0 ;# need to reset the Rindex value
               S01:0000313C:  3E 00
F00:0050       	ld (Rindex),a
               S01:0000313E:  32 D9 31
F00:0051       
F00:0052       2$: ;# a contains the Rindex value
F00:0053       	ld ix,buffer
               S01:00003141:  DD 21 DB 31
F00:0054       	ld b,0
               S01:00003145:  06 00
F00:0055       	ld c,a
               S01:00003147:  4F
F00:0056       	add ix,bc ;# ix now contains the location to store the character
               S01:00003148:  DD 09
F00:0057       	ld a,(ix)
               S01:0000314A:  DD 7E 00
F00:0058       	push af ;# load the character and save onto stack
               S01:0000314D:  F5
F00:0059       	ld a,(Rindex)
               S01:0000314E:  3A D9 31
F00:0060       	inc a
               S01:00003151:  3C
F00:0061       	ld (Rindex),a ;# update Rindex and save
               S01:00003152:  32 D9 31
F00:0062       	pop af
               S01:00003155:  F1
F00:0063       	call subCounter ;# save the counter variable
               S01:00003156:  CD BC 31
F00:0064       
F00:0065       	pop ix
               S01:00003159:  DD E1
F00:0066       	pop bc
               S01:0000315B:  C1
F00:0067       	ret
               S01:0000315C:  C9
F00:0068       1$: ;# no characters available
F00:0069       	pop ix
               S01:0000315D:  DD E1
F00:0070       	pop bc
               S01:0000315F:  C1
F00:0071       	ld a,0
               S01:00003160:  3E 00
F00:0072       	ret
               S01:00003162:  C9
F00:0073       
F00:0074       
F00:0075       
F00:0076       interrupthandler:
F00:0077       	push af
               S01:00003163:  F5
F00:0078       	push ix
               S01:00003164:  DD E5
F00:0079       	in a,(SERIALPORT)
               S01:00003166:  DB 01
F00:0080       	push af
               S01:00003168:  F5
F00:0081       
F00:0082       	ld a,(Counter) ;# cannot write character if no space to write into
               S01:00003169:  3A D8 31
F00:0083       	cp buffersize
               S01:0000316C:  FE 09
F00:0084       	jp z,2$
               S01:0000316E:  CA 85 31
F00:0085       
F00:0086       
F00:0087       	call getWriteAddress
               S01:00003171:  CD 8C 31
F00:0088       	
F00:0089       	pop af ;# get the character
               S01:00003174:  F1
F00:0090       	ld (ix),a
               S01:00003175:  DD 77 00
F00:0091       
F00:0092       	ld a,(Windex) ;# reload index
               S01:00003178:  3A DA 31
F00:0093       	inc a
               S01:0000317B:  3C
F00:0094       	ld (Windex),a ;# save the updated index
               S01:0000317C:  32 DA 31
F00:0095       	call addCounter ;# update the counter variable
               S01:0000317F:  CD A3 31
F00:0096       	jp 1$
               S01:00003182:  C3 86 31
F00:0097       
F00:0098       2$: pop af ;# throw away the character
               S01:00003185:  F1
F00:0099       	
F00:0100       1$:	pop ix
               S01:00003186:  DD E1
F00:0101       	pop af
               S01:00003188:  F1
F00:0102       	ei
               S01:00003189:  FB
F00:0103       	reti
               S01:0000318A:  ED 4D
F00:0104       
F00:0105       getWriteAddress:
F00:0106       	ld a,(Windex)
               S01:0000318C:  3A DA 31
F00:0107       	cp buffersize ;# test we have not reached the max buffer size
               S01:0000318F:  FE 09
F00:0108       	jp nz, 3$
               S01:00003191:  C2 99 31
F00:0109       	;# need to cycle the Windex
F00:0110       	ld a,0
               S01:00003194:  3E 00
F00:0111       	ld (Windex),a
               S01:00003196:  32 DA 31
F00:0112       3$:	;# store the character in buffer, A = Windex value
F00:0113       	ld ix,buffer
               S01:00003199:  DD 21 DB 31
F00:0114       	ld b,0
               S01:0000319D:  06 00
F00:0115       	ld c,a
               S01:0000319F:  4F
F00:0116       	add ix,bc ;# ix now contains the location to store the character
               S01:000031A0:  DD 09
F00:0117       
F00:0118       	ret
               S01:000031A2:  C9
F00:0119       addCounter:
F00:0120       	push af
               S01:000031A3:  F5
F00:0121       	push hl
               S01:000031A4:  E5
F00:0122       
F00:0123       ;#	ld hl,incmsg
F00:0124       ;#	call println
F00:0125       	ld a,(Counter)
               S01:000031A5:  3A D8 31
F00:0126       	inc a
               S01:000031A8:  3C
F00:0127       	ld (Counter),a
               S01:000031A9:  32 D8 31
F00:0128       	cp buffersize-4 ;# test this value
               S01:000031AC:  FE 05
F00:0129       	jp nz,1$ ;# flow control
               S01:000031AE:  C2 B9 31
F00:0130       	ld a,19 ;# xoff control
               S01:000031B1:  3E 13
F00:0131       	out (SERIALPORT),a
               S01:000031B3:  D3 01
F00:0132       	ld a,'*'
               S01:000031B5:  3E 2A
F00:0133       	out (SERIALPORT),a
               S01:000031B7:  D3 01
F00:0134       1$:	pop hl
               S01:000031B9:  E1
F00:0135       	pop af
               S01:000031BA:  F1
F00:0136       	ret
               S01:000031BB:  C9
F00:0137       subCounter:
F00:0138       ;#	di
F00:0139       	push af
               S01:000031BC:  F5
F00:0140       	push hl
               S01:000031BD:  E5
F00:0141       ;#	ld hl,decmsg
F00:0142       ;#	call println
F00:0143       	ld a,(Counter)
               S01:000031BE:  3A D8 31
F00:0144       	dec a
               S01:000031C1:  3D
F00:0145       	ld (Counter),a
               S01:000031C2:  32 D8 31
F00:0146       	cp 0
               S01:000031C5:  FE 00
F00:0147       	jp nz,1$ ;# flow control
               S01:000031C7:  C2 D2 31
F00:0148       	ld a,17 ;# xon control
               S01:000031CA:  3E 11
F00:0149       	out (SERIALPORT),a
               S01:000031CC:  D3 01
F00:0150       	ld a,'&'
               S01:000031CE:  3E 26
F00:0151       	out (SERIALPORT),a
               S01:000031D0:  D3 01
F00:0152       
F00:0153       1$:	pop hl
               S01:000031D2:  E1
F00:0154       	pop af
               S01:000031D3:  F1
F00:0155       ;#	ei
F00:0156       	ret
               S01:000031D4:  C9
F00:0157       
F00:0158       
F00:0159       nullroutine: ei
               S01:000031D5:  FB
F00:0160       			reti
               S01:000031D6:  ED 4D
F00:0161       
F00:0162       Counter: .byte 0
               S01:000031D8:  00
F00:0163       Rindex: .byte 0 ;# read next character from this index
               S01:000031D9:  00
F00:0164       Windex: .byte 0 ;# write next current at this index
               S01:000031DA:  00
F00:0165       buffer: .space buffersize ;# at most 10 characters
F00:0166       incmsg: .string "increment"
               S01:000031E4:  69 6E 63 72 65 6D 65 6E 74
F00:0167       decmsg: .string "decrement"
               S01:000031EE:  64 65 63 72 65 6D 65 6E 74
F00:0168       
F00:0169       .align 8
F00:0170       interruptvectors:
F00:0171       
F00:0172       	jumptable: ;# for keyboard interrupts
F00:0173       	.2byte nullroutine ;0
               S01:00003200:  D5 31
F00:0174       	.2byte interrupthandler ;0
               S01:00003202:  63 31
F00:0175       
F00:0176       	.2byte nullroutine ;0
               S01:00003204:  D5 31
F00:0177       	.2byte nullroutine ;0
               S01:00003206:  D5 31
F00:0178       	.2byte nullroutine ;0
               S01:00003208:  D5 31
F00:0179       	.2byte nullroutine ;0
               S01:0000320A:  D5 31
F00:0180       	.2byte nullroutine ;0
               S01:0000320C:  D5 31
F00:0181       	.2byte nullroutine ;0
               S01:0000320E:  D5 31
F00:0182       	.2byte nullroutine ;0
               S01:00003210:  D5 31
F00:0183       	.2byte nullroutine ;0
               S01:00003212:  D5 31
F00:0184       #/* 10 */
F00:0185       	.2byte nullroutine ;0
               S01:00003214:  D5 31
F00:0186       	.2byte nullroutine ;0
               S01:00003216:  D5 31
F00:0187       	.2byte nullroutine ;0
               S01:00003218:  D5 31
F00:0188       	.2byte nullroutine ;0
               S01:0000321A:  D5 31
F00:0189       	.2byte nullroutine ;0
               S01:0000321C:  D5 31
F00:0190       	.2byte nullroutine ;0
               S01:0000321E:  D5 31
F00:0191       	.2byte nullroutine ;0
               S01:00003220:  D5 31
F00:0192       	.2byte nullroutine ;0
               S01:00003222:  D5 31
F00:0193       	.2byte nullroutine ;0
               S01:00003224:  D5 31
F00:0194       	.2byte nullroutine ;0
               S01:00003226:  D5 31
F00:0195       #/* 20 */
F00:0196       	.2byte nullroutine ;0
               S01:00003228:  D5 31
F00:0197       	.2byte nullroutine ;0
               S01:0000322A:  D5 31
F00:0198       	.2byte nullroutine ;0
               S01:0000322C:  D5 31
F00:0199       	.2byte nullroutine ;0
               S01:0000322E:  D5 31
F00:0200       	.2byte nullroutine ;0
               S01:00003230:  D5 31
F00:0201       	.2byte nullroutine ;0
               S01:00003232:  D5 31
F00:0202       	.2byte nullroutine ;0
               S01:00003234:  D5 31
F00:0203       	.2byte nullroutine ;0
               S01:00003236:  D5 31
F00:0204       	.2byte nullroutine ;0
               S01:00003238:  D5 31
F00:0205       	.2byte nullroutine ;0
               S01:0000323A:  D5 31
F00:0206       #/* 30 */
F00:0207       	.2byte nullroutine ;0
               S01:0000323C:  D5 31
F00:0208       	.2byte nullroutine ;0
               S01:0000323E:  D5 31
F00:0209       	.2byte nullroutine ;0
               S01:00003240:  D5 31
F00:0210       	.2byte nullroutine ;0
               S01:00003242:  D5 31
F00:0211       	.2byte nullroutine ;0
               S01:00003244:  D5 31
F00:0212       	.2byte nullroutine ;0
               S01:00003246:  D5 31
F00:0213       	.2byte nullroutine ;0
               S01:00003248:  D5 31
F00:0214       	.2byte nullroutine ;0
               S01:0000324A:  D5 31
F00:0215       	.2byte nullroutine ;0
               S01:0000324C:  D5 31
F00:0216       	.2byte nullroutine ;0
               S01:0000324E:  D5 31
F00:0217       #/* 40 */
F00:0218       	.2byte nullroutine ;0
               S01:00003250:  D5 31
F00:0219       	.2byte nullroutine ;0
               S01:00003252:  D5 31
F00:0220       	.2byte nullroutine ;0
               S01:00003254:  D5 31
F00:0221       	.2byte nullroutine ;0
               S01:00003256:  D5 31
F00:0222       	.2byte nullroutine ;0
               S01:00003258:  D5 31
F00:0223       	.2byte nullroutine ;0
               S01:0000325A:  D5 31
F00:0224       	.2byte nullroutine ;0
               S01:0000325C:  D5 31
F00:0225       	.2byte nullroutine ;0
               S01:0000325E:  D5 31
F00:0226       	.2byte nullroutine ;0
               S01:00003260:  D5 31
F00:0227       	.2byte nullroutine ;0
               S01:00003262:  D5 31
F00:0228       #/* 50 */
F00:0229       	.2byte nullroutine ;0
               S01:00003264:  D5 31
F00:0230       	.2byte nullroutine ;0
               S01:00003266:  D5 31
F00:0231       	.2byte nullroutine ;0
               S01:00003268:  D5 31
F00:0232       	.2byte nullroutine ;0
               S01:0000326A:  D5 31
F00:0233       	.2byte nullroutine ;0
               S01:0000326C:  D5 31
F00:0234       	.2byte nullroutine ;0
               S01:0000326E:  D5 31
F00:0235       	.2byte nullroutine ;0
               S01:00003270:  D5 31
F00:0236       	.2byte nullroutine ;0
               S01:00003272:  D5 31
F00:0237       	.2byte nullroutine ;0
               S01:00003274:  D5 31
F00:0238       	.2byte nullroutine ;0
               S01:00003276:  D5 31
F00:0239       #/* 60 */
F00:0240       	.2byte nullroutine ;0
               S01:00003278:  D5 31
F00:0241       	.2byte nullroutine ;0
               S01:0000327A:  D5 31
F00:0242       	.2byte nullroutine ;0
               S01:0000327C:  D5 31
F00:0243       	.2byte nullroutine ;0
               S01:0000327E:  D5 31
F00:0244       	.2byte nullroutine ;0
               S01:00003280:  D5 31
F00:0245       	.2byte nullroutine ;0
               S01:00003282:  D5 31
F00:0246       	.2byte nullroutine ;0
               S01:00003284:  D5 31
F00:0247       	.2byte nullroutine ;0
               S01:00003286:  D5 31
F00:0248       	.2byte nullroutine ;0
               S01:00003288:  D5 31
F00:0249       	.2byte nullroutine ;0
               S01:0000328A:  D5 31
F00:0250       #/* 70 */
F00:0251       	.2byte nullroutine ;0
               S01:0000328C:  D5 31
F00:0252       	.2byte nullroutine ;0
               S01:0000328E:  D5 31
F00:0253       	.2byte nullroutine ;0
               S01:00003290:  D5 31
F00:0254       	.2byte nullroutine ;0
               S01:00003292:  D5 31
F00:0255       	.2byte nullroutine ;0
               S01:00003294:  D5 31
F00:0256       	.2byte nullroutine ;0
               S01:00003296:  D5 31
F00:0257       	.2byte nullroutine ;0
               S01:00003298:  D5 31
F00:0258       	.2byte nullroutine ;0
               S01:0000329A:  D5 31
F00:0259       	.2byte nullroutine ;0
               S01:0000329C:  D5 31
F00:0260       	.2byte nullroutine ;0
               S01:0000329E:  D5 31
F00:0261       #/* 80 */
F00:0262       	.2byte nullroutine ;0
               S01:000032A0:  D5 31
F00:0263       	.2byte nullroutine ;0
               S01:000032A2:  D5 31
F00:0264       	.2byte nullroutine ;0
               S01:000032A4:  D5 31
F00:0265       	.2byte nullroutine ;0
               S01:000032A6:  D5 31
F00:0266       	.2byte nullroutine ;0
               S01:000032A8:  D5 31
F00:0267       	.2byte nullroutine ;0
               S01:000032AA:  D5 31
F00:0268       	.2byte nullroutine ;0
               S01:000032AC:  D5 31
F00:0269       	.2byte nullroutine ;0
               S01:000032AE:  D5 31
F00:0270       	.2byte nullroutine ;0
               S01:000032B0:  D5 31
F00:0271       	.2byte nullroutine ;0
               S01:000032B2:  D5 31
F00:0272       #/* 90 */
F00:0273       	.2byte nullroutine ;0
               S01:000032B4:  D5 31
F00:0274       	.2byte nullroutine ;0
               S01:000032B6:  D5 31
F00:0275       	.2byte nullroutine ;0
               S01:000032B8:  D5 31
F00:0276       	.2byte nullroutine ;0
               S01:000032BA:  D5 31
F00:0277       	.2byte nullroutine ;0
               S01:000032BC:  D5 31
F00:0278       	.2byte nullroutine ;0
               S01:000032BE:  D5 31
F00:0279       	.2byte nullroutine ;0
               S01:000032C0:  D5 31
F00:0280       	.2byte nullroutine ;0
               S01:000032C2:  D5 31
F00:0281       	.2byte nullroutine ;0
               S01:000032C4:  D5 31
F00:0282       	.2byte nullroutine ;0
               S01:000032C6:  D5 31
F00:0283       #/* 100 */
F00:0284       	.2byte nullroutine ;0
               S01:000032C8:  D5 31
F00:0285       	.2byte nullroutine ;0
               S01:000032CA:  D5 31
F00:0286       	.2byte nullroutine ;0
               S01:000032CC:  D5 31
F00:0287       	.2byte nullroutine ;0
               S01:000032CE:  D5 31
F00:0288       	.2byte nullroutine ;0
               S01:000032D0:  D5 31
F00:0289       	.2byte nullroutine ;0
               S01:000032D2:  D5 31
F00:0290       	.2byte nullroutine ;0
               S01:000032D4:  D5 31
F00:0291       	.2byte nullroutine ;0
               S01:000032D6:  D5 31
F00:0292       	.2byte nullroutine ;0
               S01:000032D8:  D5 31
F00:0293       	.2byte nullroutine ;0
               S01:000032DA:  D5 31
F00:0294       #/* 110 */
F00:0295       	.2byte nullroutine ;0
               S01:000032DC:  D5 31
F00:0296       	.2byte nullroutine ;0
               S01:000032DE:  D5 31
F00:0297       	.2byte nullroutine ;0
               S01:000032E0:  D5 31
F00:0298       	.2byte nullroutine ;0
               S01:000032E2:  D5 31
F00:0299       	.2byte nullroutine ;0
               S01:000032E4:  D5 31
F00:0300       	.2byte nullroutine ;0
               S01:000032E6:  D5 31
F00:0301       	.2byte nullroutine ;0
               S01:000032E8:  D5 31
F00:0302       	.2byte nullroutine ;0
               S01:000032EA:  D5 31
F00:0303       	.2byte nullroutine ;0
               S01:000032EC:  D5 31
F00:0304       	.2byte nullroutine ;0
               S01:000032EE:  D5 31
F00:0305       #/* 120 */
F00:0306       	.2byte nullroutine ;0
               S01:000032F0:  D5 31
F00:0307       	.2byte nullroutine ;0
               S01:000032F2:  D5 31
F00:0308       	.2byte nullroutine ;0
               S01:000032F4:  D5 31
F00:0309       	.2byte nullroutine ;0
               S01:000032F6:  D5 31
F00:0310       	.2byte nullroutine ;0
               S01:000032F8:  D5 31
F00:0311       	.2byte nullroutine ;0
               S01:000032FA:  D5 31
F00:0312       	.2byte nullroutine ;0
               S01:000032FC:  D5 31
F00:0313       	.2byte nullroutine ;0
               S01:000032FE:  D5 31
F00:0314       
F00:0315       	ENDADDRESS:


Sections:
S01  seg3000


Sources:
F00  edit.s
F01  Routines.inc
F02  SERIAL.inc
F03  SDCARD.inc
F04  libs.inc


Symbols:
jumptable EXPR(12800=0x3200) UNUSED ABS 
decmsg EXPR(12782=0x31ee) UNUSED ABS 
incmsg EXPR(12772=0x31e4) UNUSED ABS 
nullroutine EXPR(12757=0x31d5) ABS 
 subCounter 1$ EXPR(12754=0x31d2) ABS 
 addCounter 1$ EXPR(12729=0x31b9) ABS 
 getWriteAddress 3$ EXPR(12697=0x3199) ABS 
 interrupthandler 1$ EXPR(12678=0x3186) ABS 
addCounter EXPR(12707=0x31a3) ABS 
Windex EXPR(12762=0x31da) ABS 
getWriteAddress EXPR(12684=0x318c) ABS 
 interrupthandler 2$ EXPR(12677=0x3185) ABS 
interrupthandler EXPR(12643=0x3163) ABS 
subCounter EXPR(12732=0x31bc) ABS 
buffer EXPR(12763=0x31db) ABS 
 getc 2$ EXPR(12609=0x3141) ABS 
Rindex EXPR(12761=0x31d9) ABS 
 getc 1$ EXPR(12637=0x315d) ABS 
Counter EXPR(12760=0x31d8) ABS 
exit EXPR(12578=0x3122) ABS 
getc EXPR(12585=0x3129) ABS 
 loop 1$ EXPR(12554=0x310a) UNUSED ABS 
available EXPR(12581=0x3125) ABS 
loop EXPR(12546=0x3102) ABS 
interruptvectors EXPR(12800=0x3200) ABS 
buffersize EXPR(9=0x9) 
strncpy EXPR(12535=0x30f7) UNUSED ABS 
strcpy EXPR(12532=0x30f4) UNUSED ABS 
nextprocessinfo EXPR(12529=0x30f1) UNUSED ABS 
startprocessinfo EXPR(12526=0x30ee) UNUSED ABS 
printhexL EXPR(12523=0x30eb) UNUSED ABS 
setresetpage EXPR(12520=0x30e8) UNUSED ABS 
Div8 EXPR(12517=0x30e5) UNUSED ABS 
getmalloctable EXPR(12514=0x30e2) UNUSED ABS 
getcommandparams EXPR(12511=0x30df) UNUSED ABS 
createProcess EXPR(12508=0x30dc) UNUSED ABS 
getfilename EXPR(12505=0x30d9) UNUSED ABS 
directorynextfile EXPR(12502=0x30d6) UNUSED ABS 
directoryopen EXPR(12499=0x30d3) UNUSED ABS 
hextobyte EXPR(12496=0x30d0) UNUSED ABS 
touppercase EXPR(12493=0x30cd) UNUSED ABS 
putc EXPR(12490=0x30ca) ABS 
strlen EXPR(12487=0x30c7) UNUSED ABS 
memset EXPR(12484=0x30c4) UNUSED ABS 
loadfile EXPR(12481=0x30c1) UNUSED ABS 
printhex EXPR(12478=0x30be) UNUSED ABS 
println EXPR(12475=0x30bb) UNUSED ABS 
print EXPR(12472=0x30b8) UNUSED ABS 
functionlookups EXPR(12471=0x30b7) UNUSED ABS 
_main EXPR(12538=0x30fa) ABS 
strncpyadr EXPR(12536=0x30f8) ABS 
strcpyadr EXPR(12533=0x30f5) ABS 
nextprocessinfoadr EXPR(12530=0x30f2) ABS 
startprocessinfoadr EXPR(12527=0x30ef) ABS 
printhexLadr EXPR(12524=0x30ec) ABS 
setresetpageadr EXPR(12521=0x30e9) ABS 
div8adr EXPR(12518=0x30e6) ABS 
getmalloctableadr EXPR(12515=0x30e3) ABS 
getcommandparamsadr EXPR(12512=0x30e0) ABS 
createProcessadr EXPR(12509=0x30dd) ABS 
getfilenameadr EXPR(12506=0x30da) ABS 
directorynextfileadr EXPR(12503=0x30d7) ABS 
directoryopenadr EXPR(12500=0x30d4) ABS 
printlnadr EXPR(12476=0x30bc) ABS 
hextobyteadr EXPR(12497=0x30d1) ABS 
touppercaseadr EXPR(12494=0x30ce) ABS 
putcadr EXPR(12491=0x30cb) ABS 
strlenadr EXPR(12488=0x30c8) ABS 
memsetadr EXPR(12485=0x30c5) ABS 
loadfileadr EXPR(12482=0x30c2) ABS 
printhexadr EXPR(12479=0x30bf) ABS 
printadr EXPR(12473=0x30b9) ABS 
ENDADDRESS EXPR(13056=0x3300) ABS 
 *current pc dummy* EXPR(12290=0x3002) INTERNAL PROT ABS 
NEXTNUMBER EXPR(26=0x1a) UNUSED 
NEXTPROCESSINFO EXPR(23=0x17) 
STARTPROCESSINFO EXPR(22=0x16) 
SETRESETPAGE EXPR(20=0x14) 
DIV8 EXPR(19=0x13) 
GETMALLOCTABLE EXPR(18=0x12) 
GETFILENAME EXPR(15=0xf) 
DIRECTORYNEXTFILE EXPR(14=0xe) UNUSED 
DIRECTORYOPEN EXPR(13=0xd) 
GETCOMMANDPARAMS EXPR(17=0x11) 
CREATEPROCESS EXPR(16=0x10) 
HEXTOBYTE EXPR(8=0x8) 
TOUPPERCASE EXPR(7=0x7) 
PUTC EXPR(6=0x6) 
STRNCPY EXPR(10=0xa) 
STRCPY EXPR(24=0x18) 
STRLEN EXPR(5=0x5) 
MEMSET EXPR(4=0x4) 
LOADFILE EXPR(3=0x3) 
PRINTHEXL EXPR(21=0x15) 
PRINTHEX EXPR(2=0x2) 
PRINTLN EXPR(9=0x9) 
PRINT EXPR(1=0x1) 
GetAddress EXPR(2052=0x804) 
FALSE EXPR(0=0x0) UNUSED 
TRUE EXPR(1=0x1) UNUSED 
libMemory EXPR(61440=0xf000) UNUSED 
userMemory EXPR(12288=0x3000) 
commandMemory EXPR(8192=0x2000) UNUSED 
NEXTFILE EXPR(50=0x32) 
OPENDIRECTORY EXPR(49=0x31) UNUSED 
NAMEAVAILABLE EXPR(33=0x21) UNUSED 
GETNAME EXPR(32=0x20) UNUSED 
WRITEBYTE EXPR(8=0x8) UNUSED 
OPENWRITE EXPR(7=0x7) UNUSED 
AVAILABLE EXPR(6=0x6) UNUSED 
READNEXTBYTE EXPR(5=0x5) UNUSED 
FILENAMEAPPEND EXPR(4=0x4) UNUSED 
CLOSE EXPR(3=0x3) UNUSED 
OPEN EXPR(2=0x2) UNUSED 
FILENAMECLEAR EXPR(1=0x1) UNUSED 
SDCARD EXPR(5=0x5) UNUSED 
SERIALPORT2 EXPR(2=0x2) UNUSED 
SERIALPORT EXPR(1=0x1) 
__VASM EXPR(0=0x0) INTERNAL 
__MSDOSFS EXPR(0=0x0) INTERNAL 

There have been no errors.

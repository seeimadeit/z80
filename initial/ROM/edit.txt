F00:0001       .include "Routines.inc"
F01:0001       
F01:0002       # address where user programs load
F01:0003       .include "SERIAL.inc"
F02:0001       .equ SERIALPORT , 0x01
F02:0002       .equ SERIALPORT2, 0x02
F02:0003       
F01:0004       .include "SDCARD.inc"
F03:0001       .equ SDCARD,0x05
F03:0002       ; ******* SDCARD *********
F03:0003       ; z80 out -filenameclear: no return value, will close the previous open file is one already open
F03:0004       .equ FILENAMECLEAR ,1
F03:0005       
F03:0006       ; z80 out + in -open: will return a status 1 if file open successfull, 0 if open failed
F03:0007       .equ OPEN ,2
F03:0008       
F03:0009       ; z80 out - close: no return value
F03:0010       .equ CLOSE ,3
F03:0011       
F03:0012       ; z80 out + out - filenameappend: no return value
F03:0013       .equ FILENAMEAPPEND ,4
F03:0014       
F03:0015       ; z80 out + in - readnextbyte: will return 0xFF is nothing to read, which might be a problem if you don't check the avai
F03:0016       .equ READNEXTBYTE ,5
F03:0017       
F03:0018       ; z80 out + in - available: return 1 is data is available, 0 if no data available
F03:0019       .equ AVAILABLE ,6
F03:0020       
F03:0021       ; z80 out + in - openwrite: open file for write ,will return a status 1 if file open successfull, 0 if open failed
F03:0022       .equ OPENWRITE,7
F03:0023       
F03:0024       ; z80 - out + out -writebyte: will write data to an open file,is no file is open or the file is not writable nothing wil
F03:0025       .equ WRITEBYTE,8
F03:0026       
F03:0027       ;#===============================
F03:0028       ; z80 - out -getname: prepares to get the openfilename, use NAMEAVAILABLE to read the bytes, no return value
F03:0029       .equ GETNAME,0x20
F03:0030       ; z80 out + in - nameavailable: return next character of the filename, or 0 it no more characters
F03:0031       .equ NAMEAVAILABLE,0x21
F03:0032       ;z80 - out - opendirectory : will open the root directory for directory listing, no return value
F03:0033       .equ OPENDIRECTORY,0x31
F03:0034       ;z80 -out - nextfile: move to the next directory entry, no return value
F03:0035       .equ NEXTFILE,0x32
F01:0005       .equ commandMemory, 0x1000
F01:0006       .equ userMemory,0x2000
F01:0007       .equ libMemory,0xF000
F01:0008       
F01:0009       .equ TRUE, 1
F01:0010       .equ FALSE, 0
F01:0011       
F01:0012       # the only fixed address (i hope), use it to get the address of utilities methods
F01:0013       # ld a, PRINT
F01:0014       # call GetAddress
F01:0015       # address for print loaded into hl
F01:0016       # the value in hl can change between os versions so do not hard code the values
F01:0017       
F01:0018       .equ GetAddress, 0x0804
F01:0019       .equ PRINT,		1
F01:0020       .equ PRINTLN,	9
F01:0021       .equ PRINTHEX,	2
F01:0022       .equ LOADFILE,	3
F01:0023       .equ MEMSET,	4
F01:0024       .equ STRLEN,	5
F01:0025       .equ PUTC,		6
F01:0026       .equ TOUPPERCASE,7
F01:0027       .equ HEXTOBYTE,	8
F01:0028       .equ STRNCPY,10
F01:0029       .equ CREATEPROCESS,16
F01:0030       .equ GETCOMMANDPARAMS,17
F01:0031       # filesystem - primitive functions, probably going to change 
F01:0032       .equ DIRECTORYOPEN,13
F01:0033       .equ DIRECTORYNEXTFILE,14
F01:0034       .equ GETFILENAME,15
F01:0035       
F01:0036       
F01:0037       
F01:0038       .equ NEXTNUMBER,18
F01:0039       
F01:0040       
F00:0002       .include "libs.inc"
F04:0001       
F04:0002       .ifndef __CMD__
F04:0003       	.ifdef __LIB__
F04:0004       		.ifdef __ORG__
F04:0005       			.org __ORG__
F04:0006       		.else 
F04:0007       		.org dllMemory
F04:0008       		.endif
F04:0009       		.2byte $
F04:0010       		jp libaddress
F04:0011       initialize:
F04:0012       	.else
F04:0013       		.org userMemory
F04:0014       	.endif
F04:0015       .endif
F04:0016       	ld a,PRINT
               S01:00002000:  3E 01
F04:0017       	call GetAddress
               S01:00002002:  CD 04 08
F04:0018       	ld (printadr),hl
               S01:00002005:  22 75 20
F04:0019       	ld a,PRINTHEX
               S01:00002008:  3E 02
F04:0020       	call GetAddress
               S01:0000200A:  CD 04 08
F04:0021       	ld (printhexadr),hl
               S01:0000200D:  22 7B 20
F04:0022       	ld a,LOADFILE
               S01:00002010:  3E 03
F04:0023       	call GetAddress
               S01:00002012:  CD 04 08
F04:0024       	ld (loadfileadr),hl
               S01:00002015:  22 7E 20
F04:0025       	ld a,MEMSET
               S01:00002018:  3E 04
F04:0026       	call GetAddress
               S01:0000201A:  CD 04 08
F04:0027       	ld (memsetadr),hl
               S01:0000201D:  22 81 20
F04:0028       	ld a,STRLEN
               S01:00002020:  3E 05
F04:0029       	call GetAddress
               S01:00002022:  CD 04 08
F04:0030       	ld (strlenadr),hl
               S01:00002025:  22 84 20
F04:0031       	ld a,PUTC
               S01:00002028:  3E 06
F04:0032       	call GetAddress
               S01:0000202A:  CD 04 08
F04:0033       	ld (putcadr),hl
               S01:0000202D:  22 87 20
F04:0034       	ld a,TOUPPERCASE
               S01:00002030:  3E 07
F04:0035       	call GetAddress
               S01:00002032:  CD 04 08
F04:0036       	ld (touppercaseadr),hl
               S01:00002035:  22 8A 20
F04:0037       	ld a,HEXTOBYTE
               S01:00002038:  3E 08
F04:0038       	call GetAddress
               S01:0000203A:  CD 04 08
F04:0039       	ld (hextobyteadr),hl
               S01:0000203D:  22 8D 20
F04:0040       	ld a,PRINTLN
               S01:00002040:  3E 09
F04:0041       	call GetAddress
               S01:00002042:  CD 04 08
F04:0042       	ld (printlnadr),hl
               S01:00002045:  22 78 20
F04:0043       	ld a,DIRECTORYOPEN
               S01:00002048:  3E 0D
F04:0044       	call GetAddress
               S01:0000204A:  CD 04 08
F04:0045       	ld (directoryopenadr),hl
               S01:0000204D:  22 90 20
F04:0046       	ld a,NEXTFILE
               S01:00002050:  3E 32
F04:0047       	call GetAddress
               S01:00002052:  CD 04 08
F04:0048       	ld (directorynextfileadr),hl
               S01:00002055:  22 93 20
F04:0049       	ld a,GETFILENAME
               S01:00002058:  3E 0F
F04:0050       	call GetAddress
               S01:0000205A:  CD 04 08
F04:0051       	ld (getfilenameadr),hl
               S01:0000205D:  22 96 20
F04:0052       	ld a,CREATEPROCESS
               S01:00002060:  3E 10
F04:0053       	call GetAddress
               S01:00002062:  CD 04 08
F04:0054       	ld (createProcessadr),hl
               S01:00002065:  22 99 20
F04:0055       	ld a,GETCOMMANDPARAMS
               S01:00002068:  3E 11
F04:0056       	call GetAddress
               S01:0000206A:  CD 04 08
F04:0057       	ld (getcommandparamsadr),hl
               S01:0000206D:  22 9C 20
F04:0058       
F04:0059       
F04:0060       	jp _main
               S01:00002070:  C3 9E 20
F04:0061       
F04:0062       	functionlookups:
F04:0063       	.align 2
F04:0064       	print: .byte 0xc3
               S01:00002074:  C3
F04:0065       	printadr: .2byte 0
               S01:00002075:  00 00
F04:0066       	println: .byte 0xc3
               S01:00002077:  C3
F04:0067       	printlnadr: .2byte 0
               S01:00002078:  00 00
F04:0068       	printhex: .byte 0xc3
               S01:0000207A:  C3
F04:0069       	printhexadr: .2byte 0
               S01:0000207B:  00 00
F04:0070       	loadfile: .byte 0xc3
               S01:0000207D:  C3
F04:0071       	loadfileadr: .2byte 0
               S01:0000207E:  00 00
F04:0072       	memset: .byte 0xc3
               S01:00002080:  C3
F04:0073       	memsetadr: .2byte 0
               S01:00002081:  00 00
F04:0074       	strlen: .byte 0xc3
               S01:00002083:  C3
F04:0075       	strlenadr: .2byte 0
               S01:00002084:  00 00
F04:0076       	putc: .byte 0xc3
               S01:00002086:  C3
F04:0077       	putcadr: .2byte 0
               S01:00002087:  00 00
F04:0078       	touppercase: .byte 0xc3
               S01:00002089:  C3
F04:0079       	touppercaseadr: .2byte 0
               S01:0000208A:  00 00
F04:0080       	hextobyte: .byte 0xc3
               S01:0000208C:  C3
F04:0081       	hextobyteadr: .2byte 0
               S01:0000208D:  00 00
F04:0082       	directoryopen: .byte 0xc3
               S01:0000208F:  C3
F04:0083       	directoryopenadr: .2byte 0
               S01:00002090:  00 00
F04:0084       	directorynextfile: .byte 0xc3
               S01:00002092:  C3
F04:0085       	directorynextfileadr: .2byte 0
               S01:00002093:  00 00
F04:0086       	getfilename: .byte 0xc3
               S01:00002095:  C3
F04:0087       	getfilenameadr: .2byte 0
               S01:00002096:  00 00
F04:0088       	createProcess: .byte 0xc3
               S01:00002098:  C3
F04:0089       	createProcessadr: .2byte 0
               S01:00002099:  00 00
F04:0090       	getcommandparams: .byte 0xc3
               S01:0000209B:  C3
F04:0091       	getcommandparamsadr: .2byte 0
               S01:0000209C:  00 00
F04:0092       
F04:0093       _main:
F04:0094       .ifdef __DLL__
F04:0095       	ret
F04:0096       .endif
F00:0003       
F00:0004       .equ buffersize,9
F00:0005       
F00:0006       	di
               S01:0000209E:  F3
F00:0007       	im 2
               S01:0000209F:  ED 5E
F00:0008       	ld a, interruptvectors/256
               S01:000020A1:  3E 22
F00:0009       	ld i,a
               S01:000020A3:  ED 47
F00:0010       	ei
               S01:000020A5:  FB
F00:0011       
F00:0012       loop:
F00:0013       	call available
               S01:000020A6:  CD C9 20
F00:0014       	cp 0
               S01:000020A9:  FE 00
F00:0015       	jp z, loop
               S01:000020AB:  CA A6 20
F00:0016       
F00:0017       1$:
F00:0018       	call getc
               S01:000020AE:  CD CD 20
F00:0019       	cp 0x1b
               S01:000020B1:  FE 1B
F00:0020       	jp z,exit
               S01:000020B3:  CA C6 20
F00:0021       	call putc
               S01:000020B6:  CD 86 20
F00:0022       	
F00:0023       	cp 0x0d
               S01:000020B9:  FE 0D
F00:0024       	jp nz,loop
               S01:000020BB:  C2 A6 20
F00:0025       	ld a,0x0a
               S01:000020BE:  3E 0A
F00:0026       	call putc
               S01:000020C0:  CD 86 20
F00:0027       	jp loop
               S01:000020C3:  C3 A6 20
F00:0028       
F00:0029       
F00:0030       exit:
F00:0031       	ld a,0
               S01:000020C6:  3E 00
F00:0032       	ret
               S01:000020C8:  C9
F00:0033       
F00:0034       available: ;# return number of characters in the buffer
F00:0035       	ld a,(Counter)
               S01:000020C9:  3A 7C 21
F00:0036       	ret
               S01:000020CC:  C9
F00:0037       
F00:0038       getc:
F00:0039       	push bc
               S01:000020CD:  C5
F00:0040       	push ix
               S01:000020CE:  DD E5
F00:0041       
F00:0042       	ld a,(Counter) ;# cannot getc if there are no characters to get
               S01:000020D0:  3A 7C 21
F00:0043       	cp 0
               S01:000020D3:  FE 00
F00:0044       	jp z,1$
               S01:000020D5:  CA 01 21
F00:0045       
F00:0046       	ld a,(Rindex)
               S01:000020D8:  3A 7D 21
F00:0047       	cp buffersize
               S01:000020DB:  FE 09
F00:0048       	jp nz,2$
               S01:000020DD:  C2 E5 20
F00:0049       	ld a,0 ;# need to reset the Rindex value
               S01:000020E0:  3E 00
F00:0050       	ld (Rindex),a
               S01:000020E2:  32 7D 21
F00:0051       
F00:0052       2$: ;# a contains the Rindex value
F00:0053       	ld ix,buffer
               S01:000020E5:  DD 21 7F 21
F00:0054       	ld b,0
               S01:000020E9:  06 00
F00:0055       	ld c,a
               S01:000020EB:  4F
F00:0056       	add ix,bc ;# ix now contains the location to store the character
               S01:000020EC:  DD 09
F00:0057       	ld a,(ix)
               S01:000020EE:  DD 7E 00
F00:0058       	push af ;# load the character and save onto stack
               S01:000020F1:  F5
F00:0059       	ld a,(Rindex)
               S01:000020F2:  3A 7D 21
F00:0060       	inc a
               S01:000020F5:  3C
F00:0061       	ld (Rindex),a ;# update Rindex and save
               S01:000020F6:  32 7D 21
F00:0062       	pop af
               S01:000020F9:  F1
F00:0063       	call subCounter ;# save the counter variable
               S01:000020FA:  CD 60 21
F00:0064       
F00:0065       	pop ix
               S01:000020FD:  DD E1
F00:0066       	pop bc
               S01:000020FF:  C1
F00:0067       	ret
               S01:00002100:  C9
F00:0068       1$: ;# no characters available
F00:0069       	pop ix
               S01:00002101:  DD E1
F00:0070       	pop bc
               S01:00002103:  C1
F00:0071       	ld a,0
               S01:00002104:  3E 00
F00:0072       	ret
               S01:00002106:  C9
F00:0073       
F00:0074       
F00:0075       
F00:0076       interrupthandler:
F00:0077       	push af
               S01:00002107:  F5
F00:0078       	push ix
               S01:00002108:  DD E5
F00:0079       	in a,(SERIALPORT)
               S01:0000210A:  DB 01
F00:0080       	push af
               S01:0000210C:  F5
F00:0081       
F00:0082       	ld a,(Counter) ;# cannot write character if no space to write into
               S01:0000210D:  3A 7C 21
F00:0083       	cp buffersize
               S01:00002110:  FE 09
F00:0084       	jp z,2$
               S01:00002112:  CA 29 21
F00:0085       
F00:0086       
F00:0087       	call getWriteAddress
               S01:00002115:  CD 30 21
F00:0088       	
F00:0089       	pop af ;# get the character
               S01:00002118:  F1
F00:0090       	ld (ix),a
               S01:00002119:  DD 77 00
F00:0091       
F00:0092       	ld a,(Windex) ;# reload index
               S01:0000211C:  3A 7E 21
F00:0093       	inc a
               S01:0000211F:  3C
F00:0094       	ld (Windex),a ;# save the updated index
               S01:00002120:  32 7E 21
F00:0095       	call addCounter ;# update the counter variable
               S01:00002123:  CD 47 21
F00:0096       	jp 1$
               S01:00002126:  C3 2A 21
F00:0097       
F00:0098       2$: pop af ;# throw away the character
               S01:00002129:  F1
F00:0099       	
F00:0100       1$:	pop ix
               S01:0000212A:  DD E1
F00:0101       	pop af
               S01:0000212C:  F1
F00:0102       	ei
               S01:0000212D:  FB
F00:0103       	reti
               S01:0000212E:  ED 4D
F00:0104       
F00:0105       getWriteAddress:
F00:0106       	ld a,(Windex)
               S01:00002130:  3A 7E 21
F00:0107       	cp buffersize ;# test we have not reached the max buffer size
               S01:00002133:  FE 09
F00:0108       	jp nz, 3$
               S01:00002135:  C2 3D 21
F00:0109       	;# need to cycle the Windex
F00:0110       	ld a,0
               S01:00002138:  3E 00
F00:0111       	ld (Windex),a
               S01:0000213A:  32 7E 21
F00:0112       3$:	;# store the character in buffer, A = Windex value
F00:0113       	ld ix,buffer
               S01:0000213D:  DD 21 7F 21
F00:0114       	ld b,0
               S01:00002141:  06 00
F00:0115       	ld c,a
               S01:00002143:  4F
F00:0116       	add ix,bc ;# ix now contains the location to store the character
               S01:00002144:  DD 09
F00:0117       
F00:0118       	ret
               S01:00002146:  C9
F00:0119       addCounter:
F00:0120       	push af
               S01:00002147:  F5
F00:0121       	push hl
               S01:00002148:  E5
F00:0122       
F00:0123       ;#	ld hl,incmsg
F00:0124       ;#	call println
F00:0125       	ld a,(Counter)
               S01:00002149:  3A 7C 21
F00:0126       	inc a
               S01:0000214C:  3C
F00:0127       	ld (Counter),a
               S01:0000214D:  32 7C 21
F00:0128       	cp buffersize-4 ;# test this value
               S01:00002150:  FE 05
F00:0129       	jp nz,1$ ;# flow control
               S01:00002152:  C2 5D 21
F00:0130       	ld a,19 ;# xoff control
               S01:00002155:  3E 13
F00:0131       	out (SERIALPORT),a
               S01:00002157:  D3 01
F00:0132       	ld a,'*'
               S01:00002159:  3E 2A
F00:0133       	out (SERIALPORT),a
               S01:0000215B:  D3 01
F00:0134       1$:	pop hl
               S01:0000215D:  E1
F00:0135       	pop af
               S01:0000215E:  F1
F00:0136       	ret
               S01:0000215F:  C9
F00:0137       subCounter:
F00:0138       ;#	di
F00:0139       	push af
               S01:00002160:  F5
F00:0140       	push hl
               S01:00002161:  E5
F00:0141       ;#	ld hl,decmsg
F00:0142       ;#	call println
F00:0143       	ld a,(Counter)
               S01:00002162:  3A 7C 21
F00:0144       	dec a
               S01:00002165:  3D
F00:0145       	ld (Counter),a
               S01:00002166:  32 7C 21
F00:0146       	cp 0
               S01:00002169:  FE 00
F00:0147       	jp nz,1$ ;# flow control
               S01:0000216B:  C2 76 21
F00:0148       	ld a,17 ;# xon control
               S01:0000216E:  3E 11
F00:0149       	out (SERIALPORT),a
               S01:00002170:  D3 01
F00:0150       	ld a,'&'
               S01:00002172:  3E 26
F00:0151       	out (SERIALPORT),a
               S01:00002174:  D3 01
F00:0152       
F00:0153       1$:	pop hl
               S01:00002176:  E1
F00:0154       	pop af
               S01:00002177:  F1
F00:0155       ;#	ei
F00:0156       	ret
               S01:00002178:  C9
F00:0157       
F00:0158       
F00:0159       nullroutine: ei
               S01:00002179:  FB
F00:0160       			reti
               S01:0000217A:  ED 4D
F00:0161       
F00:0162       Counter: .byte 0
               S01:0000217C:  00
F00:0163       Rindex: .byte 0 ;# read next character from this index
               S01:0000217D:  00
F00:0164       Windex: .byte 0 ;# write next current at this index
               S01:0000217E:  00
F00:0165       buffer: .space buffersize ;# at most 10 characters
F00:0166       incmsg: .string "increment"
               S01:00002188:  69 6E 63 72 65 6D 65 6E 74
F00:0167       decmsg: .string "decrement"
               S01:00002192:  64 65 63 72 65 6D 65 6E 74
F00:0168       
F00:0169       .align 8
F00:0170       interruptvectors:
F00:0171       
F00:0172       	jumptable: ;# for keyboard interrupts
F00:0173       	.2byte nullroutine ;0
               S01:00002200:  79 21
F00:0174       	.2byte interrupthandler ;0
               S01:00002202:  07 21
F00:0175       
F00:0176       	.2byte nullroutine ;0
               S01:00002204:  79 21
F00:0177       	.2byte nullroutine ;0
               S01:00002206:  79 21
F00:0178       	.2byte nullroutine ;0
               S01:00002208:  79 21
F00:0179       	.2byte nullroutine ;0
               S01:0000220A:  79 21
F00:0180       	.2byte nullroutine ;0
               S01:0000220C:  79 21
F00:0181       	.2byte nullroutine ;0
               S01:0000220E:  79 21
F00:0182       	.2byte nullroutine ;0
               S01:00002210:  79 21
F00:0183       	.2byte nullroutine ;0
               S01:00002212:  79 21
F00:0184       #/* 10 */
F00:0185       	.2byte nullroutine ;0
               S01:00002214:  79 21
F00:0186       	.2byte nullroutine ;0
               S01:00002216:  79 21
F00:0187       	.2byte nullroutine ;0
               S01:00002218:  79 21
F00:0188       	.2byte nullroutine ;0
               S01:0000221A:  79 21
F00:0189       	.2byte nullroutine ;0
               S01:0000221C:  79 21
F00:0190       	.2byte nullroutine ;0
               S01:0000221E:  79 21
F00:0191       	.2byte nullroutine ;0
               S01:00002220:  79 21
F00:0192       	.2byte nullroutine ;0
               S01:00002222:  79 21
F00:0193       	.2byte nullroutine ;0
               S01:00002224:  79 21
F00:0194       	.2byte nullroutine ;0
               S01:00002226:  79 21
F00:0195       #/* 20 */
F00:0196       	.2byte nullroutine ;0
               S01:00002228:  79 21
F00:0197       	.2byte nullroutine ;0
               S01:0000222A:  79 21
F00:0198       	.2byte nullroutine ;0
               S01:0000222C:  79 21
F00:0199       	.2byte nullroutine ;0
               S01:0000222E:  79 21
F00:0200       	.2byte nullroutine ;0
               S01:00002230:  79 21
F00:0201       	.2byte nullroutine ;0
               S01:00002232:  79 21
F00:0202       	.2byte nullroutine ;0
               S01:00002234:  79 21
F00:0203       	.2byte nullroutine ;0
               S01:00002236:  79 21
F00:0204       	.2byte nullroutine ;0
               S01:00002238:  79 21
F00:0205       	.2byte nullroutine ;0
               S01:0000223A:  79 21
F00:0206       #/* 30 */
F00:0207       	.2byte nullroutine ;0
               S01:0000223C:  79 21
F00:0208       	.2byte nullroutine ;0
               S01:0000223E:  79 21
F00:0209       	.2byte nullroutine ;0
               S01:00002240:  79 21
F00:0210       	.2byte nullroutine ;0
               S01:00002242:  79 21
F00:0211       	.2byte nullroutine ;0
               S01:00002244:  79 21
F00:0212       	.2byte nullroutine ;0
               S01:00002246:  79 21
F00:0213       	.2byte nullroutine ;0
               S01:00002248:  79 21
F00:0214       	.2byte nullroutine ;0
               S01:0000224A:  79 21
F00:0215       	.2byte nullroutine ;0
               S01:0000224C:  79 21
F00:0216       	.2byte nullroutine ;0
               S01:0000224E:  79 21
F00:0217       #/* 40 */
F00:0218       	.2byte nullroutine ;0
               S01:00002250:  79 21
F00:0219       	.2byte nullroutine ;0
               S01:00002252:  79 21
F00:0220       	.2byte nullroutine ;0
               S01:00002254:  79 21
F00:0221       	.2byte nullroutine ;0
               S01:00002256:  79 21
F00:0222       	.2byte nullroutine ;0
               S01:00002258:  79 21
F00:0223       	.2byte nullroutine ;0
               S01:0000225A:  79 21
F00:0224       	.2byte nullroutine ;0
               S01:0000225C:  79 21
F00:0225       	.2byte nullroutine ;0
               S01:0000225E:  79 21
F00:0226       	.2byte nullroutine ;0
               S01:00002260:  79 21
F00:0227       	.2byte nullroutine ;0
               S01:00002262:  79 21
F00:0228       #/* 50 */
F00:0229       	.2byte nullroutine ;0
               S01:00002264:  79 21
F00:0230       	.2byte nullroutine ;0
               S01:00002266:  79 21
F00:0231       	.2byte nullroutine ;0
               S01:00002268:  79 21
F00:0232       	.2byte nullroutine ;0
               S01:0000226A:  79 21
F00:0233       	.2byte nullroutine ;0
               S01:0000226C:  79 21
F00:0234       	.2byte nullroutine ;0
               S01:0000226E:  79 21
F00:0235       	.2byte nullroutine ;0
               S01:00002270:  79 21
F00:0236       	.2byte nullroutine ;0
               S01:00002272:  79 21
F00:0237       	.2byte nullroutine ;0
               S01:00002274:  79 21
F00:0238       	.2byte nullroutine ;0
               S01:00002276:  79 21
F00:0239       #/* 60 */
F00:0240       	.2byte nullroutine ;0
               S01:00002278:  79 21
F00:0241       	.2byte nullroutine ;0
               S01:0000227A:  79 21
F00:0242       	.2byte nullroutine ;0
               S01:0000227C:  79 21
F00:0243       	.2byte nullroutine ;0
               S01:0000227E:  79 21
F00:0244       	.2byte nullroutine ;0
               S01:00002280:  79 21
F00:0245       	.2byte nullroutine ;0
               S01:00002282:  79 21
F00:0246       	.2byte nullroutine ;0
               S01:00002284:  79 21
F00:0247       	.2byte nullroutine ;0
               S01:00002286:  79 21
F00:0248       	.2byte nullroutine ;0
               S01:00002288:  79 21
F00:0249       	.2byte nullroutine ;0
               S01:0000228A:  79 21
F00:0250       #/* 70 */
F00:0251       	.2byte nullroutine ;0
               S01:0000228C:  79 21
F00:0252       	.2byte nullroutine ;0
               S01:0000228E:  79 21
F00:0253       	.2byte nullroutine ;0
               S01:00002290:  79 21
F00:0254       	.2byte nullroutine ;0
               S01:00002292:  79 21
F00:0255       	.2byte nullroutine ;0
               S01:00002294:  79 21
F00:0256       	.2byte nullroutine ;0
               S01:00002296:  79 21
F00:0257       	.2byte nullroutine ;0
               S01:00002298:  79 21
F00:0258       	.2byte nullroutine ;0
               S01:0000229A:  79 21
F00:0259       	.2byte nullroutine ;0
               S01:0000229C:  79 21
F00:0260       	.2byte nullroutine ;0
               S01:0000229E:  79 21
F00:0261       #/* 80 */
F00:0262       	.2byte nullroutine ;0
               S01:000022A0:  79 21
F00:0263       	.2byte nullroutine ;0
               S01:000022A2:  79 21
F00:0264       	.2byte nullroutine ;0
               S01:000022A4:  79 21
F00:0265       	.2byte nullroutine ;0
               S01:000022A6:  79 21
F00:0266       	.2byte nullroutine ;0
               S01:000022A8:  79 21
F00:0267       	.2byte nullroutine ;0
               S01:000022AA:  79 21
F00:0268       	.2byte nullroutine ;0
               S01:000022AC:  79 21
F00:0269       	.2byte nullroutine ;0
               S01:000022AE:  79 21
F00:0270       	.2byte nullroutine ;0
               S01:000022B0:  79 21
F00:0271       	.2byte nullroutine ;0
               S01:000022B2:  79 21
F00:0272       #/* 90 */
F00:0273       	.2byte nullroutine ;0
               S01:000022B4:  79 21
F00:0274       	.2byte nullroutine ;0
               S01:000022B6:  79 21
F00:0275       	.2byte nullroutine ;0
               S01:000022B8:  79 21
F00:0276       	.2byte nullroutine ;0
               S01:000022BA:  79 21
F00:0277       	.2byte nullroutine ;0
               S01:000022BC:  79 21
F00:0278       	.2byte nullroutine ;0
               S01:000022BE:  79 21
F00:0279       	.2byte nullroutine ;0
               S01:000022C0:  79 21
F00:0280       	.2byte nullroutine ;0
               S01:000022C2:  79 21
F00:0281       	.2byte nullroutine ;0
               S01:000022C4:  79 21
F00:0282       	.2byte nullroutine ;0
               S01:000022C6:  79 21
F00:0283       #/* 100 */
F00:0284       	.2byte nullroutine ;0
               S01:000022C8:  79 21
F00:0285       	.2byte nullroutine ;0
               S01:000022CA:  79 21
F00:0286       	.2byte nullroutine ;0
               S01:000022CC:  79 21
F00:0287       	.2byte nullroutine ;0
               S01:000022CE:  79 21
F00:0288       	.2byte nullroutine ;0
               S01:000022D0:  79 21
F00:0289       	.2byte nullroutine ;0
               S01:000022D2:  79 21
F00:0290       	.2byte nullroutine ;0
               S01:000022D4:  79 21
F00:0291       	.2byte nullroutine ;0
               S01:000022D6:  79 21
F00:0292       	.2byte nullroutine ;0
               S01:000022D8:  79 21
F00:0293       	.2byte nullroutine ;0
               S01:000022DA:  79 21
F00:0294       #/* 110 */
F00:0295       	.2byte nullroutine ;0
               S01:000022DC:  79 21
F00:0296       	.2byte nullroutine ;0
               S01:000022DE:  79 21
F00:0297       	.2byte nullroutine ;0
               S01:000022E0:  79 21
F00:0298       	.2byte nullroutine ;0
               S01:000022E2:  79 21
F00:0299       	.2byte nullroutine ;0
               S01:000022E4:  79 21
F00:0300       	.2byte nullroutine ;0
               S01:000022E6:  79 21
F00:0301       	.2byte nullroutine ;0
               S01:000022E8:  79 21
F00:0302       	.2byte nullroutine ;0
               S01:000022EA:  79 21
F00:0303       	.2byte nullroutine ;0
               S01:000022EC:  79 21
F00:0304       	.2byte nullroutine ;0
               S01:000022EE:  79 21
F00:0305       #/* 120 */
F00:0306       	.2byte nullroutine ;0
               S01:000022F0:  79 21
F00:0307       	.2byte nullroutine ;0
               S01:000022F2:  79 21
F00:0308       	.2byte nullroutine ;0
               S01:000022F4:  79 21
F00:0309       	.2byte nullroutine ;0
               S01:000022F6:  79 21
F00:0310       	.2byte nullroutine ;0
               S01:000022F8:  79 21
F00:0311       	.2byte nullroutine ;0
               S01:000022FA:  79 21
F00:0312       	.2byte nullroutine ;0
               S01:000022FC:  79 21
F00:0313       	.2byte nullroutine ;0
               S01:000022FE:  79 21


Sections:
S01  seg2000


Sources:
F00  edit.s
F01  Routines.inc
F02  SERIAL.inc
F03  SDCARD.inc
F04  libs.inc


Symbols:
jumptable EXPR(8704=0x2200) UNUSED ABS 
decmsg EXPR(8594=0x2192) UNUSED ABS 
incmsg EXPR(8584=0x2188) UNUSED ABS 
nullroutine EXPR(8569=0x2179) ABS 
 subCounter 1$ EXPR(8566=0x2176) ABS 
 addCounter 1$ EXPR(8541=0x215d) ABS 
 getWriteAddress 3$ EXPR(8509=0x213d) ABS 
 interrupthandler 1$ EXPR(8490=0x212a) ABS 
addCounter EXPR(8519=0x2147) ABS 
Windex EXPR(8574=0x217e) ABS 
getWriteAddress EXPR(8496=0x2130) ABS 
 interrupthandler 2$ EXPR(8489=0x2129) ABS 
interrupthandler EXPR(8455=0x2107) ABS 
subCounter EXPR(8544=0x2160) ABS 
buffer EXPR(8575=0x217f) ABS 
 getc 2$ EXPR(8421=0x20e5) ABS 
Rindex EXPR(8573=0x217d) ABS 
 getc 1$ EXPR(8449=0x2101) ABS 
Counter EXPR(8572=0x217c) ABS 
exit EXPR(8390=0x20c6) ABS 
getc EXPR(8397=0x20cd) ABS 
 loop 1$ EXPR(8366=0x20ae) UNUSED ABS 
available EXPR(8393=0x20c9) ABS 
loop EXPR(8358=0x20a6) ABS 
interruptvectors EXPR(8704=0x2200) ABS 
buffersize EXPR(9=0x9) 
getcommandparams EXPR(8347=0x209b) UNUSED ABS 
createProcess EXPR(8344=0x2098) UNUSED ABS 
getfilename EXPR(8341=0x2095) UNUSED ABS 
directorynextfile EXPR(8338=0x2092) UNUSED ABS 
directoryopen EXPR(8335=0x208f) UNUSED ABS 
hextobyte EXPR(8332=0x208c) UNUSED ABS 
touppercase EXPR(8329=0x2089) UNUSED ABS 
putc EXPR(8326=0x2086) ABS 
strlen EXPR(8323=0x2083) UNUSED ABS 
memset EXPR(8320=0x2080) UNUSED ABS 
loadfile EXPR(8317=0x207d) UNUSED ABS 
printhex EXPR(8314=0x207a) UNUSED ABS 
println EXPR(8311=0x2077) UNUSED ABS 
print EXPR(8308=0x2074) UNUSED ABS 
functionlookups EXPR(8307=0x2073) UNUSED ABS 
_main EXPR(8350=0x209e) ABS 
getcommandparamsadr EXPR(8348=0x209c) ABS 
createProcessadr EXPR(8345=0x2099) ABS 
getfilenameadr EXPR(8342=0x2096) ABS 
directorynextfileadr EXPR(8339=0x2093) ABS 
directoryopenadr EXPR(8336=0x2090) ABS 
printlnadr EXPR(8312=0x2078) ABS 
hextobyteadr EXPR(8333=0x208d) ABS 
touppercaseadr EXPR(8330=0x208a) ABS 
putcadr EXPR(8327=0x2087) ABS 
strlenadr EXPR(8324=0x2084) ABS 
memsetadr EXPR(8321=0x2081) ABS 
loadfileadr EXPR(8318=0x207e) ABS 
printhexadr EXPR(8315=0x207b) ABS 
printadr EXPR(8309=0x2075) ABS 
NEXTNUMBER EXPR(18=0x12) UNUSED 
GETFILENAME EXPR(15=0xf) 
DIRECTORYNEXTFILE EXPR(14=0xe) UNUSED 
DIRECTORYOPEN EXPR(13=0xd) 
GETCOMMANDPARAMS EXPR(17=0x11) 
CREATEPROCESS EXPR(16=0x10) 
STRNCPY EXPR(10=0xa) UNUSED 
HEXTOBYTE EXPR(8=0x8) 
TOUPPERCASE EXPR(7=0x7) 
PUTC EXPR(6=0x6) 
STRLEN EXPR(5=0x5) 
MEMSET EXPR(4=0x4) 
LOADFILE EXPR(3=0x3) 
PRINTHEX EXPR(2=0x2) 
PRINTLN EXPR(9=0x9) 
PRINT EXPR(1=0x1) 
GetAddress EXPR(2052=0x804) 
FALSE EXPR(0=0x0) UNUSED 
TRUE EXPR(1=0x1) UNUSED 
libMemory EXPR(61440=0xf000) UNUSED 
userMemory EXPR(8192=0x2000) 
commandMemory EXPR(4096=0x1000) UNUSED 
NEXTFILE EXPR(50=0x32) 
OPENDIRECTORY EXPR(49=0x31) UNUSED 
NAMEAVAILABLE EXPR(33=0x21) UNUSED 
GETNAME EXPR(32=0x20) UNUSED 
WRITEBYTE EXPR(8=0x8) UNUSED 
OPENWRITE EXPR(7=0x7) UNUSED 
AVAILABLE EXPR(6=0x6) UNUSED 
READNEXTBYTE EXPR(5=0x5) UNUSED 
FILENAMEAPPEND EXPR(4=0x4) UNUSED 
CLOSE EXPR(3=0x3) UNUSED 
OPEN EXPR(2=0x2) UNUSED 
FILENAMECLEAR EXPR(1=0x1) UNUSED 
SDCARD EXPR(5=0x5) UNUSED 
SERIALPORT2 EXPR(2=0x2) UNUSED 
SERIALPORT EXPR(1=0x1) 
__VASM EXPR(0=0x0) INTERNAL 
__MSDOSFS EXPR(0=0x0) INTERNAL 

There have been no errors.

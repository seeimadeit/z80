F00:0001       .set __DLL__,1
F00:0002       
F00:0003       .include "Routines.inc"
F01:0001       
F01:0002       # address where user programs load
F01:0003       .include "SERIAL.inc"
F02:0001       .equ SERIALPORT , 0x01
F02:0002       .equ SERIALPORT2, 0x02
F02:0003       
F01:0004       .include "SDCARD.inc"
F03:0001       .equ SDCARD,0x05
F03:0002       ; ******* SDCARD *********
F03:0003       ; z80 out -filenameclear: no return value, will close the previous open file is one already open
F03:0004       .equ FILENAMECLEAR ,1
F03:0005       
F03:0006       ; z80 out + in -open: will return a status 1 if file open successfull, 0 if open failed
F03:0007       .equ OPEN ,2
F03:0008       
F03:0009       ; z80 out - close: no return value
F03:0010       .equ CLOSE ,3
F03:0011       
F03:0012       ; z80 out + out - filenameappend: no return value
F03:0013       .equ FILENAMEAPPEND ,4
F03:0014       
F03:0015       ; z80 out + in - readnextbyte: will return 0xFF is nothing to read, which might be a problem if you don't check the avai
F03:0016       .equ READNEXTBYTE ,5
F03:0017       
F03:0018       ; z80 out + in - available: return 1 is data is available, 0 if no data available
F03:0019       .equ AVAILABLE ,6
F03:0020       
F03:0021       ; z80 out + in - openwrite: open file for write ,will return a status 1 if file open successfull, 0 if open failed
F03:0022       .equ OPENWRITE,7
F03:0023       
F03:0024       ; z80 - out + out -writebyte: will write data to an open file,is no file is open or the file is not writable nothing wil
F03:0025       .equ WRITEBYTE,8
F03:0026       
F03:0027       ;#===============================
F03:0028       ; z80 - out -getname: prepares to get the openfilename, use NAMEAVAILABLE to read the bytes, no return value
F03:0029       .equ GETNAME,0x20
F03:0030       ; z80 out + in - nameavailable: return next character of the filename, or 0 it no more characters
F03:0031       .equ NAMEAVAILABLE,0x21
F03:0032       ;z80 - out - opendirectory : will open the root directory for directory listing, no return value
F03:0033       .equ OPENDIRECTORY,0x31
F03:0034       ;z80 -out - nextfile: move to the next directory entry, no return value
F03:0035       .equ NEXTFILE,0x32
F01:0005       .equ commandMemory, 0x1000
F01:0006       .equ userMemory,0x2000
F01:0007       .equ dllMemory,0xF000
F01:0008       
F01:0009       .equ TRUE, 1
F01:0010       .equ FALSE, 0
F01:0011       
F01:0012       # the only fixed address (i hope), use it to get the address of utilities methods
F01:0013       # ld a, PRINT
F01:0014       # call GetAddress
F01:0015       # address for print loaded into hl
F01:0016       # the value in hl can change between os versions so do not hard code the values
F01:0017       
F01:0018       .equ GetAddress, 0x0804
F01:0019       .equ PRINT,		1
F01:0020       .equ PRINTLN,	9
F01:0021       .equ PRINTHEX,	2
F01:0022       .equ LOADFILE,	3
F01:0023       .equ MEMSET,	4
F01:0024       .equ STRLEN,	5
F01:0025       .equ PUTC,		6
F01:0026       .equ TOUPPERCASE,7
F01:0027       .equ HEXTOBYTE,	8
F01:0028       .equ STRNCPY,10
F01:0029       .equ CREATEPROCESS,16
F01:0030       .equ GETCOMMANDPARAMS,17
F01:0031       # filesystem - primitive functions, probably going to change 
F01:0032       .equ DIRECTORYOPEN,13
F01:0033       .equ DIRECTORYNEXTFILE,14
F01:0034       .equ GETFILENAME,15
F01:0035       
F01:0036       
F01:0037       
F01:0038       .equ NEXTNUMBER,18
F01:0039       
F01:0040       
F00:0004       .include "libs.inc"
F04:0001       
F04:0002       .ifndef __CMD__
F04:0003       	.ifdef __DLL__
F04:0004       		.org dllMemory
F04:0005       		.2byte $
               S01:0000F000:  00 F0
F04:0006       	.else
F04:0007       		.org userMemory
F04:0008       	.endif
F04:0009       .endif
F04:0010       	ld a,PRINT
               S01:0000F002:  3E 01
F04:0011       	call GetAddress
               S01:0000F004:  CD 04 08
F04:0012       	ld (printadr),hl
               S01:0000F007:  22 79 F0
F04:0013       	ld a,PRINTHEX
               S01:0000F00A:  3E 02
F04:0014       	call GetAddress
               S01:0000F00C:  CD 04 08
F04:0015       	ld (printhexadr),hl
               S01:0000F00F:  22 7F F0
F04:0016       	ld a,LOADFILE
               S01:0000F012:  3E 03
F04:0017       	call GetAddress
               S01:0000F014:  CD 04 08
F04:0018       	ld (loadfileadr),hl
               S01:0000F017:  22 82 F0
F04:0019       	ld a,MEMSET
               S01:0000F01A:  3E 04
F04:0020       	call GetAddress
               S01:0000F01C:  CD 04 08
F04:0021       	ld (memsetadr),hl
               S01:0000F01F:  22 85 F0
F04:0022       	ld a,STRLEN
               S01:0000F022:  3E 05
F04:0023       	call GetAddress
               S01:0000F024:  CD 04 08
F04:0024       	ld (strlenadr),hl
               S01:0000F027:  22 88 F0
F04:0025       	ld a,PUTC
               S01:0000F02A:  3E 06
F04:0026       	call GetAddress
               S01:0000F02C:  CD 04 08
F04:0027       	ld (putcadr),hl
               S01:0000F02F:  22 8B F0
F04:0028       	ld a,TOUPPERCASE
               S01:0000F032:  3E 07
F04:0029       	call GetAddress
               S01:0000F034:  CD 04 08
F04:0030       	ld (touppercaseadr),hl
               S01:0000F037:  22 8E F0
F04:0031       	ld a,HEXTOBYTE
               S01:0000F03A:  3E 08
F04:0032       	call GetAddress
               S01:0000F03C:  CD 04 08
F04:0033       	ld (hextobyteadr),hl
               S01:0000F03F:  22 91 F0
F04:0034       	ld a,PRINTLN
               S01:0000F042:  3E 09
F04:0035       	call GetAddress
               S01:0000F044:  CD 04 08
F04:0036       	ld (printlnadr),hl
               S01:0000F047:  22 7C F0
F04:0037       	ld a,DIRECTORYOPEN
               S01:0000F04A:  3E 0D
F04:0038       	call GetAddress
               S01:0000F04C:  CD 04 08
F04:0039       	ld (directoryopenadr),hl
               S01:0000F04F:  22 94 F0
F04:0040       	ld a,NEXTFILE
               S01:0000F052:  3E 32
F04:0041       	call GetAddress
               S01:0000F054:  CD 04 08
F04:0042       	ld (directorynextfileadr),hl
               S01:0000F057:  22 97 F0
F04:0043       	ld a,GETFILENAME
               S01:0000F05A:  3E 0F
F04:0044       	call GetAddress
               S01:0000F05C:  CD 04 08
F04:0045       	ld (getfilenameadr),hl
               S01:0000F05F:  22 9A F0
F04:0046       	ld a,CREATEPROCESS
               S01:0000F062:  3E 10
F04:0047       	call GetAddress
               S01:0000F064:  CD 04 08
F04:0048       	ld (createProcessadr),hl
               S01:0000F067:  22 9D F0
F04:0049       	ld a,GETCOMMANDPARAMS
               S01:0000F06A:  3E 11
F04:0050       	call GetAddress
               S01:0000F06C:  CD 04 08
F04:0051       	ld (getcommandparamsadr),hl
               S01:0000F06F:  22 A0 F0
F04:0052       
F04:0053       
F04:0054       	jp _main
               S01:0000F072:  C3 A2 F0
F04:0055       
F04:0056       	functionlookups:
F04:0057       	.align 2
F04:0058       	print: .byte 0xc3
               S01:0000F078:  C3
F04:0059       	printadr: .2byte 0
               S01:0000F079:  00 00
F04:0060       	println: .byte 0xc3
               S01:0000F07B:  C3
F04:0061       	printlnadr: .2byte 0
               S01:0000F07C:  00 00
F04:0062       	printhex: .byte 0xc3
               S01:0000F07E:  C3
F04:0063       	printhexadr: .2byte 0
               S01:0000F07F:  00 00
F04:0064       	loadfile: .byte 0xc3
               S01:0000F081:  C3
F04:0065       	loadfileadr: .2byte 0
               S01:0000F082:  00 00
F04:0066       	memset: .byte 0xc3
               S01:0000F084:  C3
F04:0067       	memsetadr: .2byte 0
               S01:0000F085:  00 00
F04:0068       	strlen: .byte 0xc3
               S01:0000F087:  C3
F04:0069       	strlenadr: .2byte 0
               S01:0000F088:  00 00
F04:0070       	putc: .byte 0xc3
               S01:0000F08A:  C3
F04:0071       	putcadr: .2byte 0
               S01:0000F08B:  00 00
F04:0072       	touppercase: .byte 0xc3
               S01:0000F08D:  C3
F04:0073       	touppercaseadr: .2byte 0
               S01:0000F08E:  00 00
F04:0074       	hextobyte: .byte 0xc3
               S01:0000F090:  C3
F04:0075       	hextobyteadr: .2byte 0
               S01:0000F091:  00 00
F04:0076       	directoryopen: .byte 0xc3
               S01:0000F093:  C3
F04:0077       	directoryopenadr: .2byte 0
               S01:0000F094:  00 00
F04:0078       	directorynextfile: .byte 0xc3
               S01:0000F096:  C3
F04:0079       	directorynextfileadr: .2byte 0
               S01:0000F097:  00 00
F04:0080       	getfilename: .byte 0xc3
               S01:0000F099:  C3
F04:0081       	getfilenameadr: .2byte 0
               S01:0000F09A:  00 00
F04:0082       	createProcess: .byte 0xc3
               S01:0000F09C:  C3
F04:0083       	createProcessadr: .2byte 0
               S01:0000F09D:  00 00
F04:0084       	getcommandparams: .byte 0xc3
               S01:0000F09F:  C3
F04:0085       	getcommandparamsadr: .2byte 0
               S01:0000F0A0:  00 00
F04:0086       
F04:0087       _main:
F00:0005       
F00:0006       
F00:0007       
F00:0008       
F00:0009       
F00:0010       ld a,0
               S01:0000F0A2:  3E 00
F00:0011       
F00:0012       
F00:0013       


Sections:
S01  segf000


Sources:
F00  screen.s
F01  Routines.inc
F02  SERIAL.inc
F03  SDCARD.inc
F04  libs.inc


Symbols:
getcommandparams EXPR(61599=0xf09f) UNUSED ABS 
createProcess EXPR(61596=0xf09c) UNUSED ABS 
getfilename EXPR(61593=0xf099) UNUSED ABS 
directorynextfile EXPR(61590=0xf096) UNUSED ABS 
directoryopen EXPR(61587=0xf093) UNUSED ABS 
hextobyte EXPR(61584=0xf090) UNUSED ABS 
touppercase EXPR(61581=0xf08d) UNUSED ABS 
putc EXPR(61578=0xf08a) UNUSED ABS 
strlen EXPR(61575=0xf087) UNUSED ABS 
memset EXPR(61572=0xf084) UNUSED ABS 
loadfile EXPR(61569=0xf081) UNUSED ABS 
printhex EXPR(61566=0xf07e) UNUSED ABS 
println EXPR(61563=0xf07b) UNUSED ABS 
print EXPR(61560=0xf078) UNUSED ABS 
functionlookups EXPR(61557=0xf075) UNUSED ABS 
_main EXPR(61602=0xf0a2) ABS 
getcommandparamsadr EXPR(61600=0xf0a0) ABS 
createProcessadr EXPR(61597=0xf09d) ABS 
getfilenameadr EXPR(61594=0xf09a) ABS 
directorynextfileadr EXPR(61591=0xf097) ABS 
directoryopenadr EXPR(61588=0xf094) ABS 
printlnadr EXPR(61564=0xf07c) ABS 
hextobyteadr EXPR(61585=0xf091) ABS 
touppercaseadr EXPR(61582=0xf08e) ABS 
putcadr EXPR(61579=0xf08b) ABS 
strlenadr EXPR(61576=0xf088) ABS 
memsetadr EXPR(61573=0xf085) ABS 
loadfileadr EXPR(61570=0xf082) ABS 
printhexadr EXPR(61567=0xf07f) ABS 
printadr EXPR(61561=0xf079) ABS 
 *current pc dummy* EXPR(61440=0xf000) INTERNAL PROT ABS 
NEXTNUMBER EXPR(18=0x12) UNUSED 
GETFILENAME EXPR(15=0xf) 
DIRECTORYNEXTFILE EXPR(14=0xe) UNUSED 
DIRECTORYOPEN EXPR(13=0xd) 
GETCOMMANDPARAMS EXPR(17=0x11) 
CREATEPROCESS EXPR(16=0x10) 
STRNCPY EXPR(10=0xa) UNUSED 
HEXTOBYTE EXPR(8=0x8) 
TOUPPERCASE EXPR(7=0x7) 
PUTC EXPR(6=0x6) 
STRLEN EXPR(5=0x5) 
MEMSET EXPR(4=0x4) 
LOADFILE EXPR(3=0x3) 
PRINTHEX EXPR(2=0x2) 
PRINTLN EXPR(9=0x9) 
PRINT EXPR(1=0x1) 
GetAddress EXPR(2052=0x804) 
FALSE EXPR(0=0x0) UNUSED 
TRUE EXPR(1=0x1) UNUSED 
dllMemory EXPR(61440=0xf000) 
userMemory EXPR(8192=0x2000) UNUSED 
commandMemory EXPR(4096=0x1000) UNUSED 
NEXTFILE EXPR(50=0x32) 
OPENDIRECTORY EXPR(49=0x31) UNUSED 
NAMEAVAILABLE EXPR(33=0x21) UNUSED 
GETNAME EXPR(32=0x20) UNUSED 
WRITEBYTE EXPR(8=0x8) UNUSED 
OPENWRITE EXPR(7=0x7) UNUSED 
AVAILABLE EXPR(6=0x6) UNUSED 
READNEXTBYTE EXPR(5=0x5) UNUSED 
FILENAMEAPPEND EXPR(4=0x4) UNUSED 
CLOSE EXPR(3=0x3) UNUSED 
OPEN EXPR(2=0x2) UNUSED 
FILENAMECLEAR EXPR(1=0x1) UNUSED 
SDCARD EXPR(5=0x5) UNUSED 
SERIALPORT2 EXPR(2=0x2) UNUSED 
SERIALPORT EXPR(1=0x1) UNUSED 
__DLL__ EXPR(1=0x1) UNUSED 
__VASM EXPR(0=0x0) INTERNAL 
__MSDOSFS EXPR(0=0x0) INTERNAL 

There have been no errors.

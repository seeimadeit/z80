F00:0001       .set __LIB__,1
F00:0002       .set __ORG__,0x3000
F00:0003       
F00:0004       .include "Routines.inc"
F01:0001       
F01:0002       .macro DEBUG CHARACTER='!'
F01:0009       
F01:0010       
F01:0011       .macro DEBUGHEX CHARACTER='!'
F01:0018       
F01:0019       
F01:0020       
F01:0021       # address where user programs load
F01:0022       .include "SERIAL.inc"
F02:0001       .equ SERIALPORT , 0x01
F02:0002       .equ SERIALPORT2, 0x02
F02:0003       
F01:0023       .include "SDCARD.inc"
F03:0001       .equ SDCARD,0x05
F03:0002       ; ******* SDCARD *********
F03:0003       ; z80 out -filenameclear: no return value, will close the previous open file is one already open
F03:0004       .equ FILENAMECLEAR ,1
F03:0005       
F03:0006       ; z80 out + in -open: will return a status 1 if file open successfull, 0 if open failed
F03:0007       .equ OPEN ,2
F03:0008       
F03:0009       ; z80 out - close: no return value
F03:0010       .equ CLOSE ,3
F03:0011       
F03:0012       ; z80 out + out - filenameappend: no return value
F03:0013       .equ FILENAMEAPPEND ,4
F03:0014       
F03:0015       ; z80 out + in - readnextbyte: will return 0xFF is nothing to read, which might be a problem if you don't check the avai
F03:0016       .equ READNEXTBYTE ,5
F03:0017       
F03:0018       ; z80 out + in - available: return 1 is data is available, 0 if no data available
F03:0019       .equ AVAILABLE ,6
F03:0020       
F03:0021       ; z80 out + in - openwrite: open file for write ,will return a status 1 if file open successfull, 0 if open failed
F03:0022       .equ OPENWRITE,7
F03:0023       
F03:0024       ; z80 - out + out -writebyte: will write data to an open file,is no file is open or the file is not writable nothing wil
F03:0025       .equ WRITEBYTE,8
F03:0026       
F03:0027       ;#===============================
F03:0028       ; z80 - out -getname: prepares to get the openfilename, use NAMEAVAILABLE to read the bytes, no return value
F03:0029       .equ GETNAME,0x20
F03:0030       ; z80 out + in - nameavailable: return next character of the filename, or 0 it no more characters
F03:0031       .equ NAMEAVAILABLE,0x21
F03:0032       ;z80 - out - opendirectory : will open the root directory for directory listing, no return value
F03:0033       .equ OPENDIRECTORY,0x31
F03:0034       ;z80 -out - nextfile: move to the next directory entry, no return value
F03:0035       .equ NEXTFILE,0x32
F01:0024       .equ commandMemory, 0x1000
F01:0025       .equ userMemory,0x2000
F01:0026       .equ libMemory,0xF000
F01:0027       
F01:0028       .equ TRUE, 1
F01:0029       .equ FALSE, 0
F01:0030       
F01:0031       # the only fixed address (i hope), use it to get the address of utilities methods
F01:0032       # ld a, PRINT
F01:0033       # call GetAddress
F01:0034       # address for print loaded into hl
F01:0035       # the value in hl can change between os versions so do not hard code the values
F01:0036       
F01:0037       .equ GetAddress, 0x0804
F01:0038       .equ PRINT,		1
F01:0039       .equ PRINTLN,	9
F01:0040       .equ PRINTHEX,	2
F01:0041       .equ PRINTHEXL,21
F01:0042       .equ LOADFILE,	3
F01:0043       .equ MEMSET,	4
F01:0044       .equ STRLEN,	5
F01:0045       .equ PUTC,		6
F01:0046       .equ TOUPPERCASE,7
F01:0047       .equ HEXTOBYTE,	8
F01:0048       .equ STRNCPY,10
F01:0049       .equ CREATEPROCESS,16
F01:0050       .equ GETCOMMANDPARAMS,17
F01:0051       # filesystem - primitive functions, probably going to change 
F01:0052       .equ DIRECTORYOPEN,13
F01:0053       .equ DIRECTORYNEXTFILE,14
F01:0054       .equ GETFILENAME,15
F01:0055       .equ GETMALLOCTABLE,18
F01:0056       .equ DIV8,19
F01:0057       .equ SETRESETPAGE,20
F01:0058       
F01:0059       
F01:0060       
F01:0061       .equ NEXTNUMBER,22
F01:0062       
F01:0063       
F00:0005       .include "libs.inc"
F04:0001       
F04:0002       
F04:0003       	.ifdef __LIB__
F04:0004       		.ifdef __ORG__
F04:0005       			.org __ORG__
F04:0006       		.else 
F04:0007       			.org dllMemory
F04:0008       		.endif
F04:0009       		.2byte $ ;# load address
               S01:00003000:  00 30
F04:0010       		.byte ((ENDADDRESS-$)/255)+1 ;# memory required to load (in pages)
               S01:00003002:  03
F04:0011       		.ifdef __STACK__
F04:0012       			.byte __STACK__
F04:0013       		.else 
F04:0014       			.byte 1 ;# stack size (in pages)
               S01:00003003:  01
F04:0015       		.endif
F04:0016       		jp libaddress
               S01:00003004:  C3 92 32
F04:0017       initialize:
F04:0018       	.else
F04:0019       		.ifdef __ORG__
F04:0020       			.org __ORG__
F04:0021       		.else
F04:0022       			.org userMemory
F04:0023       		.endif
F04:0024       		.2byte $ ;# load address
F04:0025       		.byte ((ENDADDRESS-$)/255)+1 ;# memory required to load (in pages)
F04:0026       		.ifdef __STACK__
F04:0027       			.byte __STACK__
F04:0028       		.else 
F04:0029       			.byte 1 ;# stack size (in pages)
F04:0030       		.endif
F04:0031       	.endif
F04:0032       
F04:0033       	ld a,PRINT
               S01:00003007:  3E 01
F04:0034       	call GetAddress
               S01:00003009:  CD 04 08
F04:0035       	ld (printadr),hl
               S01:0000300C:  22 9D 30
F04:0036       	ld a,PRINTHEX
               S01:0000300F:  3E 02
F04:0037       	call GetAddress
               S01:00003011:  CD 04 08
F04:0038       	ld (printhexadr),hl
               S01:00003014:  22 A3 30
F04:0039       	ld a,LOADFILE
               S01:00003017:  3E 03
F04:0040       	call GetAddress
               S01:00003019:  CD 04 08
F04:0041       	ld (loadfileadr),hl
               S01:0000301C:  22 A6 30
F04:0042       	ld a,MEMSET
               S01:0000301F:  3E 04
F04:0043       	call GetAddress
               S01:00003021:  CD 04 08
F04:0044       	ld (memsetadr),hl
               S01:00003024:  22 A9 30
F04:0045       	ld a,STRLEN
               S01:00003027:  3E 05
F04:0046       	call GetAddress
               S01:00003029:  CD 04 08
F04:0047       	ld (strlenadr),hl
               S01:0000302C:  22 AC 30
F04:0048       	ld a,PUTC
               S01:0000302F:  3E 06
F04:0049       	call GetAddress
               S01:00003031:  CD 04 08
F04:0050       	ld (putcadr),hl
               S01:00003034:  22 AF 30
F04:0051       	ld a,TOUPPERCASE
               S01:00003037:  3E 07
F04:0052       	call GetAddress
               S01:00003039:  CD 04 08
F04:0053       	ld (touppercaseadr),hl
               S01:0000303C:  22 B2 30
F04:0054       	ld a,HEXTOBYTE
               S01:0000303F:  3E 08
F04:0055       	call GetAddress
               S01:00003041:  CD 04 08
F04:0056       	ld (hextobyteadr),hl
               S01:00003044:  22 B5 30
F04:0057       	ld a,PRINTLN
               S01:00003047:  3E 09
F04:0058       	call GetAddress
               S01:00003049:  CD 04 08
F04:0059       	ld (printlnadr),hl
               S01:0000304C:  22 A0 30
F04:0060       	ld a,DIRECTORYOPEN
               S01:0000304F:  3E 0D
F04:0061       	call GetAddress
               S01:00003051:  CD 04 08
F04:0062       	ld (directoryopenadr),hl
               S01:00003054:  22 B8 30
F04:0063       	ld a,NEXTFILE
               S01:00003057:  3E 32
F04:0064       	call GetAddress
               S01:00003059:  CD 04 08
F04:0065       	ld (directorynextfileadr),hl
               S01:0000305C:  22 BB 30
F04:0066       	ld a,GETFILENAME
               S01:0000305F:  3E 0F
F04:0067       	call GetAddress
               S01:00003061:  CD 04 08
F04:0068       	ld (getfilenameadr),hl
               S01:00003064:  22 BE 30
F04:0069       	ld a,CREATEPROCESS
               S01:00003067:  3E 10
F04:0070       	call GetAddress
               S01:00003069:  CD 04 08
F04:0071       	ld (createProcessadr),hl
               S01:0000306C:  22 C1 30
F04:0072       	ld a,GETCOMMANDPARAMS
               S01:0000306F:  3E 11
F04:0073       	call GetAddress
               S01:00003071:  CD 04 08
F04:0074       	ld (getcommandparamsadr),hl
               S01:00003074:  22 C4 30
F04:0075       	ld a,GETMALLOCTABLE
               S01:00003077:  3E 12
F04:0076       	call GetAddress
               S01:00003079:  CD 04 08
F04:0077       	ld (getmalloctableadr),hl
               S01:0000307C:  22 C7 30
F04:0078       	ld a,DIV8
               S01:0000307F:  3E 13
F04:0079       	call GetAddress
               S01:00003081:  CD 04 08
F04:0080       	ld (div8adr),hl
               S01:00003084:  22 CA 30
F04:0081       	ld a,SETRESETPAGE
               S01:00003087:  3E 14
F04:0082       	call GetAddress
               S01:00003089:  CD 04 08
F04:0083       	ld (setresetpageadr),hl
               S01:0000308C:  22 CD 30
F04:0084       	ld a,PRINTHEXL
               S01:0000308F:  3E 15
F04:0085       	call GetAddress
               S01:00003091:  CD 04 08
F04:0086       	ld (printhexLadr),hl
               S01:00003094:  22 D0 30
F04:0087       
F04:0088       
F04:0089       
F04:0090       
F04:0091       	jp _main
               S01:00003097:  C3 D2 30
F04:0092       
F04:0093       	functionlookups:
F04:0094       	.align 2
F04:0095       	print: .byte 0xc3
               S01:0000309C:  C3
F04:0096       	printadr: .2byte 0
               S01:0000309D:  00 00
F04:0097       	println: .byte 0xc3
               S01:0000309F:  C3
F04:0098       	printlnadr: .2byte 0
               S01:000030A0:  00 00
F04:0099       	printhex: .byte 0xc3
               S01:000030A2:  C3
F04:0100       	printhexadr: .2byte 0
               S01:000030A3:  00 00
F04:0101       	loadfile: .byte 0xc3
               S01:000030A5:  C3
F04:0102       	loadfileadr: .2byte 0
               S01:000030A6:  00 00
F04:0103       	memset: .byte 0xc3
               S01:000030A8:  C3
F04:0104       	memsetadr: .2byte 0
               S01:000030A9:  00 00
F04:0105       	strlen: .byte 0xc3
               S01:000030AB:  C3
F04:0106       	strlenadr: .2byte 0
               S01:000030AC:  00 00
F04:0107       	putc: .byte 0xc3
               S01:000030AE:  C3
F04:0108       	putcadr: .2byte 0
               S01:000030AF:  00 00
F04:0109       	touppercase: .byte 0xc3
               S01:000030B1:  C3
F04:0110       	touppercaseadr: .2byte 0
               S01:000030B2:  00 00
F04:0111       	hextobyte: .byte 0xc3
               S01:000030B4:  C3
F04:0112       	hextobyteadr: .2byte 0
               S01:000030B5:  00 00
F04:0113       	directoryopen: .byte 0xc3
               S01:000030B7:  C3
F04:0114       	directoryopenadr: .2byte 0
               S01:000030B8:  00 00
F04:0115       	directorynextfile: .byte 0xc3
               S01:000030BA:  C3
F04:0116       	directorynextfileadr: .2byte 0
               S01:000030BB:  00 00
F04:0117       	getfilename: .byte 0xc3
               S01:000030BD:  C3
F04:0118       	getfilenameadr: .2byte 0
               S01:000030BE:  00 00
F04:0119       	createProcess: .byte 0xc3
               S01:000030C0:  C3
F04:0120       	createProcessadr: .2byte 0
               S01:000030C1:  00 00
F04:0121       	getcommandparams: .byte 0xc3
               S01:000030C3:  C3
F04:0122       	getcommandparamsadr: .2byte 0
               S01:000030C4:  00 00
F04:0123       	getmalloctable: .byte 0xc3
               S01:000030C6:  C3
F04:0124       	getmalloctableadr: .2byte 0
               S01:000030C7:  00 00
F04:0125       	Div8: .byte 0xc3
               S01:000030C9:  C3
F04:0126       	div8adr: .2byte 0
               S01:000030CA:  00 00
F04:0127       	setresetpage: .byte 0xc3
               S01:000030CC:  C3
F04:0128       	setresetpageadr: .2byte 0
               S01:000030CD:  00 00
F04:0129       	printhexL: .byte 0xc3
               S01:000030CF:  C3
F04:0130       	printhexLadr: .2byte 0
               S01:000030D0:  00 00
F04:0131       
F04:0132       _main:
F04:0133       .ifdef __DLL__
F04:0134       	ret
F04:0135       .endif
F00:0006       .include "screen.inc"
F05:0001       
F05:0002       
F05:0003       
F05:0004       .equ TEST,2
F05:0005       .equ ANSICODE,3
F05:0006       
F05:0007       
F05:0008       
F05:0009       
F05:0010       
F05:0011       
F05:0012       
F05:0013       #ansicode - see keyboardtest.s
F05:0014       	# A - code to call
F05:0015       
F05:0016       
F05:0017       .equ CLEARSCREEN,		1
F05:0018       .equ CLEARENDOFSCREEN,	2
F05:0019       .equ CLEARBEGINOFSCREEN,3
F05:0020       .equ CLEARWHOLESCREEN,	4
F05:0021       .equ CLEARCURRENTLINE,	5
F05:0022       .equ CLEARTOENDOFLINE,	6
F05:0023       .equ CLEARFROMSTARTOFLINE,7
F05:0024       .equ CLEARLINE,			8
F05:0025       .equ COLORRESET,		9
F05:0026       .equ COLORBOLD,			10
F05:0027       .equ COLORDIM,			11
F05:0028       .equ COLORFGBLACK,		12
F05:0029       .equ COLORFGRED,		13
F05:0030       .equ COLORFGGREEN,		14
F05:0031       .equ COLORFGYELLOW,		15
F05:0032       .equ COLORFGBLUE,		16
F05:0033       .equ COLORFGMAGENTA,	17
F05:0034       .equ COLORFGCYAN,		18
F05:0035       .equ COLORFGWHITE,		19
F05:0036       .equ COLORBGBLACK,		20
F05:0037       .equ COLORBGRED,		21
F05:0038       .equ COLORBGGREEN,		22
F05:0039       .equ COLORBGYELLOW,		23
F05:0040       .equ COLORBGBLUE,		24
F05:0041       .equ COLORBGMAGENTA,	25
F05:0042       .equ COLORBGCYAN,		26
F05:0043       .equ COLORBGWHITE,		27
F05:0044       
F05:0045       
F00:0007       
F00:0008       
F00:0009       
F00:0010       
F00:0011         test:
F00:0012       	ld hl,msg
               S01:000030D2:  21 D9 30
F00:0013       	call print
               S01:000030D5:  CD 9C 30
F00:0014       	
F00:0015       	ret
               S01:000030D8:  C9
F00:0016       
F00:0017       	msg: .string "hello I'm in screen.dll"
               S01:000030D9:  68 65 6C 6C 6F 20 49 27 6D 20 69 6E 20 73 63 72
               S01:000030E9:  65 65 6E 2E 64 6C 6C
F00:0018       
F00:0019       #==== print ansi escape codes =======
F00:0020       
F00:0021       ansicode:
F00:0022       	# A - code to call
F00:0023       	push af
               S01:000030F1:  F5
F00:0024       
F00:0025       	ld hl,escapeintro
               S01:000030F2:  21 29 32
F00:0026       	call print
               S01:000030F5:  CD 9C 30
F00:0027       
F00:0028       	cp CLEARSCREEN
               S01:000030F8:  FE 01
F00:0029       	jp nz,1$
               S01:000030FA:  C2 03 31
F00:0030       	ld hl,clearscreen
               S01:000030FD:  21 2C 32
F00:0031       	jp 99$
               S01:00003100:  C3 24 32
F00:0032       1$:	cp CLEARENDOFSCREEN
               S01:00003103:  FE 02
F00:0033       	jp nz,2$
               S01:00003105:  C2 0E 31
F00:0034       	ld hl,clearendofscreen
               S01:00003108:  21 35 32
F00:0035       	jp 99$
               S01:0000310B:  C3 24 32
F00:0036       2$:	cp CLEARBEGINOFSCREEN
               S01:0000310E:  FE 03
F00:0037       	jp nz,3$
               S01:00003110:  C2 19 31
F00:0038       	ld hl,clearbeginofscreen
               S01:00003113:  21 38 32
F00:0039       	jp 99$
               S01:00003116:  C3 24 32
F00:0040       3$:	cp CLEARWHOLESCREEN
               S01:00003119:  FE 04
F00:0041       	jp nz,4$
               S01:0000311B:  C2 24 31
F00:0042       	ld hl,clearwholescreen
               S01:0000311E:  21 3B 32
F00:0043       	jp 99$
               S01:00003121:  C3 24 32
F00:0044       4$:	cp CLEARCURRENTLINE
               S01:00003124:  FE 05
F00:0045       	jp nz,5$
               S01:00003126:  C2 2F 31
F00:0046       	ld hl,clearcurrentline
               S01:00003129:  21 3E 32
F00:0047       	jp 99$
               S01:0000312C:  C3 24 32
F00:0048       5$:	cp CLEARTOENDOFLINE
               S01:0000312F:  FE 06
F00:0049       	jp nz,6$
               S01:00003131:  C2 3A 31
F00:0050       	ld hl,cleartoendofline
               S01:00003134:  21 40 32
F00:0051       	jp 99$
               S01:00003137:  C3 24 32
F00:0052       6$:	cp CLEARFROMSTARTOFLINE
               S01:0000313A:  FE 07
F00:0053       	jp nz,7$
               S01:0000313C:  C2 45 31
F00:0054       	ld hl,clearfromstartofline
               S01:0000313F:  21 43 32
F00:0055       	jp 99$
               S01:00003142:  C3 24 32
F00:0056       7$:	cp CLEARLINE
               S01:00003145:  FE 08
F00:0057       	jp nz,8$
               S01:00003147:  C2 50 31
F00:0058       	ld hl,clearline
               S01:0000314A:  21 46 32
F00:0059       	jp 99$
               S01:0000314D:  C3 24 32
F00:0060       8$:	cp COLORRESET
               S01:00003150:  FE 09
F00:0061       	jp nz,9$
               S01:00003152:  C2 5B 31
F00:0062       	ld hl,colorreset
               S01:00003155:  21 49 32
F00:0063       	jp 99$
               S01:00003158:  C3 24 32
F00:0064       9$:	cp COLORBOLD
               S01:0000315B:  FE 0A
F00:0065       	jp nz,10$
               S01:0000315D:  C2 66 31
F00:0066       	ld hl,colorbold
               S01:00003160:  21 4C 32
F00:0067       	jp 99$
               S01:00003163:  C3 24 32
F00:0068       10$:	cp COLORDIM
               S01:00003166:  FE 0B
F00:0069       	jp nz,11$
               S01:00003168:  C2 71 31
F00:0070       	ld hl,colordim
               S01:0000316B:  21 4F 32
F00:0071       	jp 99$
               S01:0000316E:  C3 24 32
F00:0072       11$:	cp COLORFGBLACK
               S01:00003171:  FE 0C
F00:0073       	jp nz,12$
               S01:00003173:  C2 7C 31
F00:0074       	ld hl,colorfgblack
               S01:00003176:  21 52 32
F00:0075       	jp 99$
               S01:00003179:  C3 24 32
F00:0076       12$:	cp COLORFGRED
               S01:0000317C:  FE 0D
F00:0077       	jp nz,13$
               S01:0000317E:  C2 87 31
F00:0078       	ld hl,colorfgred
               S01:00003181:  21 56 32
F00:0079       	jp 99$
               S01:00003184:  C3 24 32
F00:0080       13$:	cp COLORFGGREEN
               S01:00003187:  FE 0E
F00:0081       	jp nz,14$
               S01:00003189:  C2 92 31
F00:0082       	ld hl,colorfggreen
               S01:0000318C:  21 5A 32
F00:0083       	jp 99$
               S01:0000318F:  C3 24 32
F00:0084       14$:	cp COLORFGYELLOW
               S01:00003192:  FE 0F
F00:0085       	jp nz,15$
               S01:00003194:  C2 9D 31
F00:0086       	ld hl,colorfgyellow
               S01:00003197:  21 5E 32
F00:0087       	jp 99$
               S01:0000319A:  C3 24 32
F00:0088       15$:	cp COLORFGBLUE
               S01:0000319D:  FE 10
F00:0089       	jp nz,16$
               S01:0000319F:  C2 A8 31
F00:0090       	ld hl,colorfgblue
               S01:000031A2:  21 62 32
F00:0091       	jp 99$
               S01:000031A5:  C3 24 32
F00:0092       16$:	cp COLORFGMAGENTA
               S01:000031A8:  FE 11
F00:0093       	jp nz,17$
               S01:000031AA:  C2 B3 31
F00:0094       	ld hl,colorfgmagenta
               S01:000031AD:  21 66 32
F00:0095       	jp 99$
               S01:000031B0:  C3 24 32
F00:0096       17$:	cp COLORFGCYAN
               S01:000031B3:  FE 12
F00:0097       	jp nz,18$
               S01:000031B5:  C2 BE 31
F00:0098       	ld hl,colorfgmagenta
               S01:000031B8:  21 66 32
F00:0099       	jp 99$
               S01:000031BB:  C3 24 32
F00:0100       18$:	cp COLORFGWHITE
               S01:000031BE:  FE 13
F00:0101       	jp nz,19$
               S01:000031C0:  C2 C9 31
F00:0102       	ld hl,colorfgwhite
               S01:000031C3:  21 6E 32
F00:0103       	jp 99$
               S01:000031C6:  C3 24 32
F00:0104       19$:	cp COLORBGBLACK
               S01:000031C9:  FE 14
F00:0105       	jp nz,20$
               S01:000031CB:  C2 D4 31
F00:0106       	ld hl,colorbgblack
               S01:000031CE:  21 72 32
F00:0107       	jp 99$
               S01:000031D1:  C3 24 32
F00:0108       20$:	cp COLORBGRED
               S01:000031D4:  FE 15
F00:0109       	jp nz,21$
               S01:000031D6:  C2 DF 31
F00:0110       	ld hl,colorbgred
               S01:000031D9:  21 76 32
F00:0111       	jp 99$
               S01:000031DC:  C3 24 32
F00:0112       21$:	cp COLORBGGREEN
               S01:000031DF:  FE 16
F00:0113       	jp nz,22$
               S01:000031E1:  C2 EA 31
F00:0114       	ld hl,colorbggreen
               S01:000031E4:  21 7A 32
F00:0115       	jp 99$
               S01:000031E7:  C3 24 32
F00:0116       22$:	cp COLORBGYELLOW
               S01:000031EA:  FE 17
F00:0117       	jp nz,23$
               S01:000031EC:  C2 F5 31
F00:0118       	ld hl,colorbgyellow
               S01:000031EF:  21 7E 32
F00:0119       	jp 99$
               S01:000031F2:  C3 24 32
F00:0120       23$:	cp COLORBGBLUE
               S01:000031F5:  FE 18
F00:0121       	jp nz,24$
               S01:000031F7:  C2 00 32
F00:0122       	ld hl,colorbgblue
               S01:000031FA:  21 82 32
F00:0123       	jp 99$
               S01:000031FD:  C3 24 32
F00:0124       24$:	cp COLORBGMAGENTA
               S01:00003200:  FE 19
F00:0125       	jp nz,25$
               S01:00003202:  C2 0B 32
F00:0126       	ld hl,colorbgmagenta
               S01:00003205:  21 86 32
F00:0127       	jp 99$
               S01:00003208:  C3 24 32
F00:0128       25$:	cp COLORBGCYAN
               S01:0000320B:  FE 1A
F00:0129       	jp nz,26$
               S01:0000320D:  C2 16 32
F00:0130       	ld hl,colorbgcyan
               S01:00003210:  21 8A 32
F00:0131       	jp 99$
               S01:00003213:  C3 24 32
F00:0132       26$:	cp COLORBGWHITE
               S01:00003216:  FE 1B
F00:0133       	jp nz,98$
               S01:00003218:  C2 21 32
F00:0134       	ld hl,colorbgwhite
               S01:0000321B:  21 8E 32
F00:0135       	jp 99$
               S01:0000321E:  C3 24 32
F00:0136       98$: ;#default
F00:0137       	ld hl,colorreset
               S01:00003221:  21 49 32
F00:0138       99$:call print
               S01:00003224:  CD 9C 30
F00:0139       	pop af
               S01:00003227:  F1
F00:0140       	ret
               S01:00003228:  C9
F00:0141       
F00:0142       
F00:0143       escapeintro: .string 0x1b,"["
               S01:00003229:  1B
               S01:0000322A:  5B
F00:0144       clearscreen: .string "0;0H",0x1b,"[2J"
               S01:0000322C:  30 3B 30 48
               S01:00003230:  1B
               S01:00003231:  5B 32 4A
F00:0145       clearendofscreen: .string "0J"
               S01:00003235:  30 4A
F00:0146       clearbeginofscreen: .string "1J"
               S01:00003238:  31 4A
F00:0147       clearwholescreen: .string "2J"
               S01:0000323B:  32 4A
F00:0148       clearcurrentline: .string "K"
               S01:0000323E:  4B
F00:0149       cleartoendofline: .string "0K"
               S01:00003240:  30 4B
F00:0150       clearfromstartofline: .string "1K"
               S01:00003243:  31 4B
F00:0151       clearline: .string "2K"
               S01:00003246:  32 4B
F00:0152       colorreset: .string "0m"
               S01:00003249:  30 6D
F00:0153       colorbold: .string "1m"
               S01:0000324C:  31 6D
F00:0154       colordim: .string "2m"
               S01:0000324F:  32 6D
F00:0155       colorfgblack: .string "30m"
               S01:00003252:  33 30 6D
F00:0156       colorfgred: .string "31m"
               S01:00003256:  33 31 6D
F00:0157       colorfggreen: .string "32m"
               S01:0000325A:  33 32 6D
F00:0158       colorfgyellow: .string "33m"
               S01:0000325E:  33 33 6D
F00:0159       colorfgblue: .string "34m"
               S01:00003262:  33 34 6D
F00:0160       colorfgmagenta: .string "35m"
               S01:00003266:  33 35 6D
F00:0161       colorfgcyan: .string "36m"
               S01:0000326A:  33 36 6D
F00:0162       colorfgwhite: .string "37m"
               S01:0000326E:  33 37 6D
F00:0163       colorbgblack: .string "40m"
               S01:00003272:  34 30 6D
F00:0164       colorbgred: .string "41m"
               S01:00003276:  34 31 6D
F00:0165       colorbggreen: .string "42m"
               S01:0000327A:  34 32 6D
F00:0166       colorbgyellow: .string "43m"
               S01:0000327E:  34 33 6D
F00:0167       colorbgblue: .string "44m"
               S01:00003282:  34 34 6D
F00:0168       colorbgmagenta: .string "45m"
               S01:00003286:  34 35 6D
F00:0169       colorbgcyan: .string "46m"
               S01:0000328A:  34 36 6D
F00:0170       colorbgwhite: .string "47m"
               S01:0000328E:  34 37 6D
F00:0171       
F00:0172       
F00:0173       
F00:0174       ;================================
F00:0175       ; # === libaddress == #
F00:0176       ; ld a,x - where x = instruction id
F00:0177       ;				id = 1, print
F00:0178       ;					 2, printhex
F00:0179       ;					3,loadFILE
F00:0180       libaddress:
F00:0181       	cp 0
               S01:00003292:  FE 00
F00:0182       	jp nz,_loadaddress3$:
               S01:00003294:  C2 9A 32
F00:0183       	jp initialize
               S01:00003297:  C3 07 30
F00:0184       
F00:0185       
F00:0186       
F00:0187       _loadaddress3$:
F00:0188       	cp TEST
               S01:0000329A:  FE 02
F00:0189       	jp nz, _loadaddress4$
               S01:0000329C:  C2 A3 32
F00:0190       	ld hl,test
               S01:0000329F:  21 D2 30
F00:0191       	ret
               S01:000032A2:  C9
F00:0192       
F00:0193       _loadaddress4$:
F00:0194       	cp ANSICODE
               S01:000032A3:  FE 03
F00:0195       	jp nz, _loadaddress5$:
               S01:000032A5:  C2 AC 32
F00:0196       	ld hl,ansicode
               S01:000032A8:  21 F1 30
F00:0197       	ret
               S01:000032AB:  C9
F00:0198       _loadaddress5$:
F00:0199       	#----- not defined ---
F00:0200       
F00:0201       
F00:0202       	ld hl,0
               S01:000032AC:  21 00 00
F00:0203       	ret
               S01:000032AF:  C9
F00:0204       
F00:0205       ENDADDRESS:


Sections:
S01  seg3000


Sources:
F00  screen.s
F01  Routines.inc
F02  SERIAL.inc
F03  SDCARD.inc
F04  libs.inc
F05  screen.inc


Symbols:
_loadaddress5$ EXPR(12972=0x32ac) ABS 
_loadaddress4$ EXPR(12963=0x32a3) ABS 
_loadaddress3$ EXPR(12954=0x329a) ABS 
colorfgcyan EXPR(12906=0x326a) UNUSED ABS 
colorbgwhite EXPR(12942=0x328e) ABS 
 ansicode 98$ EXPR(12833=0x3221) ABS 
colorbgcyan EXPR(12938=0x328a) ABS 
 ansicode 26$ EXPR(12822=0x3216) ABS 
colorbgmagenta EXPR(12934=0x3286) ABS 
 ansicode 25$ EXPR(12811=0x320b) ABS 
colorbgblue EXPR(12930=0x3282) ABS 
 ansicode 24$ EXPR(12800=0x3200) ABS 
colorbgyellow EXPR(12926=0x327e) ABS 
 ansicode 23$ EXPR(12789=0x31f5) ABS 
colorbggreen EXPR(12922=0x327a) ABS 
 ansicode 22$ EXPR(12778=0x31ea) ABS 
colorbgred EXPR(12918=0x3276) ABS 
 ansicode 21$ EXPR(12767=0x31df) ABS 
colorbgblack EXPR(12914=0x3272) ABS 
 ansicode 20$ EXPR(12756=0x31d4) ABS 
colorfgwhite EXPR(12910=0x326e) ABS 
 ansicode 19$ EXPR(12745=0x31c9) ABS 
 ansicode 18$ EXPR(12734=0x31be) ABS 
colorfgmagenta EXPR(12902=0x3266) ABS 
 ansicode 17$ EXPR(12723=0x31b3) ABS 
colorfgblue EXPR(12898=0x3262) ABS 
 ansicode 16$ EXPR(12712=0x31a8) ABS 
colorfgyellow EXPR(12894=0x325e) ABS 
 ansicode 15$ EXPR(12701=0x319d) ABS 
colorfggreen EXPR(12890=0x325a) ABS 
 ansicode 14$ EXPR(12690=0x3192) ABS 
colorfgred EXPR(12886=0x3256) ABS 
 ansicode 13$ EXPR(12679=0x3187) ABS 
colorfgblack EXPR(12882=0x3252) ABS 
 ansicode 12$ EXPR(12668=0x317c) ABS 
colordim EXPR(12879=0x324f) ABS 
 ansicode 11$ EXPR(12657=0x3171) ABS 
colorbold EXPR(12876=0x324c) ABS 
 ansicode 10$ EXPR(12646=0x3166) ABS 
colorreset EXPR(12873=0x3249) ABS 
 ansicode 9$ EXPR(12635=0x315b) ABS 
clearline EXPR(12870=0x3246) ABS 
 ansicode 8$ EXPR(12624=0x3150) ABS 
clearfromstartofline EXPR(12867=0x3243) ABS 
 ansicode 7$ EXPR(12613=0x3145) ABS 
cleartoendofline EXPR(12864=0x3240) ABS 
 ansicode 6$ EXPR(12602=0x313a) ABS 
clearcurrentline EXPR(12862=0x323e) ABS 
 ansicode 5$ EXPR(12591=0x312f) ABS 
clearwholescreen EXPR(12859=0x323b) ABS 
 ansicode 4$ EXPR(12580=0x3124) ABS 
clearbeginofscreen EXPR(12856=0x3238) ABS 
 ansicode 3$ EXPR(12569=0x3119) ABS 
clearendofscreen EXPR(12853=0x3235) ABS 
 ansicode 2$ EXPR(12558=0x310e) ABS 
 ansicode 99$ EXPR(12836=0x3224) ABS 
clearscreen EXPR(12844=0x322c) ABS 
 ansicode 1$ EXPR(12547=0x3103) ABS 
escapeintro EXPR(12841=0x3229) ABS 
ansicode EXPR(12529=0x30f1) ABS 
msg EXPR(12505=0x30d9) ABS 
test EXPR(12498=0x30d2) ABS 
COLORBGWHITE EXPR(27=0x1b) 
COLORBGCYAN EXPR(26=0x1a) 
COLORBGMAGENTA EXPR(25=0x19) 
COLORBGBLUE EXPR(24=0x18) 
COLORBGYELLOW EXPR(23=0x17) 
COLORBGGREEN EXPR(22=0x16) 
COLORBGRED EXPR(21=0x15) 
COLORBGBLACK EXPR(20=0x14) 
COLORFGWHITE EXPR(19=0x13) 
COLORFGCYAN EXPR(18=0x12) 
COLORFGMAGENTA EXPR(17=0x11) 
COLORFGBLUE EXPR(16=0x10) 
COLORFGYELLOW EXPR(15=0xf) 
COLORFGGREEN EXPR(14=0xe) 
COLORFGRED EXPR(13=0xd) 
COLORFGBLACK EXPR(12=0xc) 
COLORDIM EXPR(11=0xb) 
COLORBOLD EXPR(10=0xa) 
COLORRESET EXPR(9=0x9) 
CLEARLINE EXPR(8=0x8) 
CLEARFROMSTARTOFLINE EXPR(7=0x7) 
CLEARTOENDOFLINE EXPR(6=0x6) 
CLEARCURRENTLINE EXPR(5=0x5) 
CLEARWHOLESCREEN EXPR(4=0x4) 
CLEARBEGINOFSCREEN EXPR(3=0x3) 
CLEARENDOFSCREEN EXPR(2=0x2) 
CLEARSCREEN EXPR(1=0x1) 
ANSICODE EXPR(3=0x3) 
TEST EXPR(2=0x2) 
printhexL EXPR(12495=0x30cf) UNUSED ABS 
setresetpage EXPR(12492=0x30cc) UNUSED ABS 
Div8 EXPR(12489=0x30c9) UNUSED ABS 
getmalloctable EXPR(12486=0x30c6) UNUSED ABS 
getcommandparams EXPR(12483=0x30c3) UNUSED ABS 
createProcess EXPR(12480=0x30c0) UNUSED ABS 
getfilename EXPR(12477=0x30bd) UNUSED ABS 
directorynextfile EXPR(12474=0x30ba) UNUSED ABS 
directoryopen EXPR(12471=0x30b7) UNUSED ABS 
hextobyte EXPR(12468=0x30b4) UNUSED ABS 
touppercase EXPR(12465=0x30b1) UNUSED ABS 
putc EXPR(12462=0x30ae) UNUSED ABS 
strlen EXPR(12459=0x30ab) UNUSED ABS 
memset EXPR(12456=0x30a8) UNUSED ABS 
loadfile EXPR(12453=0x30a5) UNUSED ABS 
printhex EXPR(12450=0x30a2) UNUSED ABS 
println EXPR(12447=0x309f) UNUSED ABS 
print EXPR(12444=0x309c) ABS 
functionlookups EXPR(12442=0x309a) UNUSED ABS 
_main EXPR(12498=0x30d2) ABS 
printhexLadr EXPR(12496=0x30d0) ABS 
setresetpageadr EXPR(12493=0x30cd) ABS 
div8adr EXPR(12490=0x30ca) ABS 
getmalloctableadr EXPR(12487=0x30c7) ABS 
getcommandparamsadr EXPR(12484=0x30c4) ABS 
createProcessadr EXPR(12481=0x30c1) ABS 
getfilenameadr EXPR(12478=0x30be) ABS 
directorynextfileadr EXPR(12475=0x30bb) ABS 
directoryopenadr EXPR(12472=0x30b8) ABS 
printlnadr EXPR(12448=0x30a0) ABS 
hextobyteadr EXPR(12469=0x30b5) ABS 
touppercaseadr EXPR(12466=0x30b2) ABS 
putcadr EXPR(12463=0x30af) ABS 
strlenadr EXPR(12460=0x30ac) ABS 
memsetadr EXPR(12457=0x30a9) ABS 
loadfileadr EXPR(12454=0x30a6) ABS 
printhexadr EXPR(12451=0x30a3) ABS 
printadr EXPR(12445=0x309d) ABS 
initialize EXPR(12295=0x3007) ABS 
libaddress EXPR(12946=0x3292) ABS 
ENDADDRESS EXPR(12976=0x32b0) ABS 
 *current pc dummy* EXPR(12290=0x3002) INTERNAL PROT ABS 
NEXTNUMBER EXPR(22=0x16) UNUSED 
SETRESETPAGE EXPR(20=0x14) 
DIV8 EXPR(19=0x13) 
GETMALLOCTABLE EXPR(18=0x12) 
GETFILENAME EXPR(15=0xf) 
DIRECTORYNEXTFILE EXPR(14=0xe) UNUSED 
DIRECTORYOPEN EXPR(13=0xd) 
GETCOMMANDPARAMS EXPR(17=0x11) 
CREATEPROCESS EXPR(16=0x10) 
STRNCPY EXPR(10=0xa) UNUSED 
HEXTOBYTE EXPR(8=0x8) 
TOUPPERCASE EXPR(7=0x7) 
PUTC EXPR(6=0x6) 
STRLEN EXPR(5=0x5) 
MEMSET EXPR(4=0x4) 
LOADFILE EXPR(3=0x3) 
PRINTHEXL EXPR(21=0x15) 
PRINTHEX EXPR(2=0x2) 
PRINTLN EXPR(9=0x9) 
PRINT EXPR(1=0x1) 
GetAddress EXPR(2052=0x804) 
FALSE EXPR(0=0x0) UNUSED 
TRUE EXPR(1=0x1) UNUSED 
libMemory EXPR(61440=0xf000) UNUSED 
userMemory EXPR(8192=0x2000) UNUSED 
commandMemory EXPR(4096=0x1000) UNUSED 
NEXTFILE EXPR(50=0x32) 
OPENDIRECTORY EXPR(49=0x31) UNUSED 
NAMEAVAILABLE EXPR(33=0x21) UNUSED 
GETNAME EXPR(32=0x20) UNUSED 
WRITEBYTE EXPR(8=0x8) UNUSED 
OPENWRITE EXPR(7=0x7) UNUSED 
AVAILABLE EXPR(6=0x6) UNUSED 
READNEXTBYTE EXPR(5=0x5) UNUSED 
FILENAMEAPPEND EXPR(4=0x4) UNUSED 
CLOSE EXPR(3=0x3) UNUSED 
OPEN EXPR(2=0x2) UNUSED 
FILENAMECLEAR EXPR(1=0x1) UNUSED 
SDCARD EXPR(5=0x5) UNUSED 
SERIALPORT2 EXPR(2=0x2) UNUSED 
SERIALPORT EXPR(1=0x1) UNUSED 
__ORG__ EXPR(12288=0x3000) 
__LIB__ EXPR(1=0x1) UNUSED 
__VASM EXPR(0=0x0) INTERNAL 
__MSDOSFS EXPR(0=0x0) INTERNAL 

There have been no errors.
